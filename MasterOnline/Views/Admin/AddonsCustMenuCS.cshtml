@using System.Globalization
@model MasterOnline.ViewModels.AddonsCustomerViewModel
@{ ViewBag.Title = "CustAddonsMenuCS";
    Layout = "~/Views/Shared/_LayoutAdminCS.cshtml";

    var editMode = 0;

    if (ViewData["Editing"] != null)
    {
        editMode = (int)ViewData["Editing"];
    }
    var context_ = new MoDbContext(); }
@section styles
{
    <link href="~/Content/build/css/bootstrap-datepicker.min.css" rel="stylesheet" />
    <link href="~/Content/build/css/selectivity-jquery.min.css" rel="stylesheet" />
    <link href="~/Content/selectize.css" rel="stylesheet" />
    <style>

        #akun-section {
            margin-top: 60px;
            background: white;
            padding: 20px;
        }
    </style>
}
<div class="row" id="akun-section">
    <div class="col-lg-12 col-md-12">
        <div class="row addons_table_section">
            <div class="col-lg-4 col-sm-6">
                <div class="input-group">
                    <input id="search_addons" type="text" class="form-control" placeholder="Pencarian">
                    <span class="input-group-btn">
                        <button type="button" class="btn btn-primary">
                            <i class="fa fa-search"></i>
                        </button>
                    </span>
                </div>
            </div>
            <div class="col-lg-8 col-sm-6">
                <div class="pull-right">
                    <button type="button" class=" btn btn-default" data-style="expand-right" onclick="location.reload();">
                        <span>Refresh</span>
                    </button>
                    <button class="btn btn-primary btn_tambah_data" id="tambah_addons">Tambah Baru</button>
                </div>
            </div>
        </div>
        <div class="row addons_table_section">
            <div class="col-sm-12">
                @if (ViewData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success">
                        @ViewData["SuccessMessage"].ToString()
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                }
                @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
                {
                    foreach (var modelError in ViewData.ModelState.SelectMany(x => x.Value.Errors))
                    {
                        <div class="alert alert-danger">
                            @modelError.ErrorMessage
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                    }
                }
                <table id="datatable" class="table table-striped table-bordered dataTable" role="grid" aria-describedby="datatable_info">
                    <thead>
                        <tr role="row">
                            <th class="sorting text-center" tabindex="0" aria-controls="datatable" rowspan="1" colspan="1" style="width: 30px;">Nama Addons</th>
                            <th class="sorting text-center" tabindex="0" aria-controls="datatable" rowspan="1" colspan="1" style="width: 30px;">Account / Email</th>
                            <th class="sorting text-center" tabindex="0" aria-controls="datatable" rowspan="1" colspan="1" style="width: 70px;">Nama Toko</th>
                            <th class="sorting text-center" tabindex="0" aria-controls="datatable" rowspan="1" colspan="1" style="width: 70px;">Tanggal Subscription</th>
                            <th class="sorting text-center" tabindex="0" aria-controls="datatable" rowspan="1" colspan="1" style="width: 70px;">Harga</th>
                            <th class="sorting text-center" tabindex="0" aria-controls="datatable" rowspan="1" colspan="1" style="width: 40px; max-width: 40px;">Ubah</th>
                            <th class="sorting text-center" tabindex="0" aria-controls="datatable" rowspan="1" colspan="1" style="width: 40px; max-width: 40px;">Hapus</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            foreach (var custaddons in Model.ListCustAddons)
                            {
                                <tr>
                                    <td>@custaddons.NamaAddons</td>
                                    <td>@custaddons.Account</td>
                                    <td>@custaddons.NamaTokoOnline</td>
                                    <td>@(custaddons.TglSubscription?.ToString("dd/MM/yyyy"))</td>
                                    @*<td>@custaddons.Harga</td>*@
                                    <td>Rp. @String.Format(CultureInfo.CreateSpecificCulture("id-id"), "{0:N}", custaddons.Harga)</td>
                                    <td class="edit-hapus-col">
                                        <button class="btn btn-primary" onclick="editAddons(@custaddons.RecNum)">
                                            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                                        </button>
                                    </td>
                                    <td class="edit-hapus-col">
                                        <button class="btn btn-danger" data-toggle="modal" data-target="#konfHapusEkspedisi" onclick="pass(@custaddons.RecNum)">
                                            <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="row addons_editor_section" style="display: none;">
            <div class="col-lg-12">
                <div class="page-editor">
                    <h2 class="editor-title">Customer Addons</h2>
                    <span class="title-accent"></span>
                    <button type="button" class="pull-right page-close">
                        <span class="close-btn thick"></span>
                    </button>
                    <div class="form-horizontal">
                        <div class="row">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                <div class="x_panel">
                                    <div class="x_title">
                                        <h2 style="font-size: 16px">Customer Addons</h2>
                                        <ul class="nav navbar-right panel_toolbox">
                                            <li>
                                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                                            </li>
                                        </ul>
                                        <div class="clearfix"></div>
                                    </div>
                                    <div class="x_content">
                                        @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
                                        {
                                            foreach (var modelError in ViewData.ModelState.SelectMany(x => x.Value.Errors))
                                            {
                                                <div class="alert alert-danger">
                                                    <span class="message-error">@modelError.ErrorMessage</span>
                                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>
                                            }
                                        }
                                        <br>
                                        @using (Html.BeginForm("SaveCustAddons", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", id = "form-addon-cust" }))
                                        {
                                            <div id="form-partial">
                                                @Html.Partial("FormAddonsCustPartial")
                                            </div>
                                            @*@Html.AntiForgeryToken()
                                                @Html.HiddenFor(m => m.Addons_Customer.RecNum)
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.Addons_Customer.NamaAddons, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                    <div class="col-md-6 col-sm-6 col-xs-12">
                                                        @Html.HiddenFor(m => m.Addons.Fitur, new { id = "namaaddons" })
                                                        <select id="Addons" placeholder="Harap Pilih"></select>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.Accounts.Email, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                    <div class="col-md-6 col-sm-6 col-xs-12">
                                                        @Html.HiddenFor(m => m.Accounts.Email)

                                                        <select id="Email_addons" placeholder="Harap Pilih"></select>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.Addons_Customer.NamaTokoOnline, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                    <div class="col-md-6 col-sm-6 col-xs-12">
                                                        @Html.TextBoxFor(m => m.Accounts.NamaTokoOnline, new { @class = "form-control", @ReadOnly = true })

                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.Addons_Customer.TglSubscription, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                    <div class="col-md-6 col-sm-6 col-xs-12">
                                                        @Html.TextBoxFor(m => m.Accounts.TGL_SUBSCRIPTION, new { @class = "form-control", @ReadOnly = true })

                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.Addons_Customer.Harga, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                    <div class="col-md-6 col-sm-6 col-xs-12">
                                                        @Html.TextBoxFor(m => m.Addons.Harga, new { @class = "form-control", @style = "text-align:right", @onblur = "ConvertToAngkaRupiah(this);", Value = String.Format(CultureInfo.CreateSpecificCulture("id-id"), "{0:N}", Model.Addons.Harga), disabled = "disabled", maxlength = "12" })

                                                    </div>
                                                </div>
                                                <hr />
                                                <button type="submit" id="simpan_btn" class="btn btn-primary pull-right" >Simpan</button>*@
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="konfHapusEkspedisi" tabindex="-1" role="dialog" aria-labelledby="konfHapusLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="konfHapusLabel">Konfirmasi</h4>
            </div>
            <div class="modal-body">
                <div class="row text-center">
                    <h4>Apakah Anda yakin ingin menghapus addons ini?</h4>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Tidak</button>
                <button type="button" class="btn btn-success" onclick="deleteAddons()">Ya</button>
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script src="~/Content/build/js/bootstrap-datepicker.min.js" type="text/javascript"></script>
    <script src="~/Content/build/js/selectivity-jquery.min.js" type="text/javascript"></script>
    <script src="~/Content/selectize.js" type="text/javascript"></script>
    <script type="text/javascript">
        $addonsId = 0;
        var table = $('#datatable').DataTable({
            "order": [[1, "asc"]], //, [9, "desc"]
            "columnDefs": [{ "targets": 3, "type": "date-eu" }],
        });
        $(document).on('ready',
            function () {
                $('#search_addons').keyup(function () {
                    table.search($(this).val()).draw();
                });

                $('#tambah_addons').on('click', function () {
                    $('.addons_table_section').toggle('display');
                    $('.addons_editor_section').toggle('display');
                });

                $('button>.close-btn').on('click', function () {
                    $('.addons_table_section').toggle('display');
                    $('.addons_editor_section').toggle('display');
                });

                if ($('.message-error').text() !== '' || @editMode === 1) {
                    $('#tambah_addons').click();
                }

                $('.close-btn').click(function() {
                    location.href = '@Url.Action("AddonsCustMenuCS")';
                });

                getAddons();
                getEmail();
            });

        function ConvertToAngkaRupiah(source) {
            if (source.value == '') {
                source.value = 0;
            }
            source.value = (convertToAngka(source.value));
            source.value = (convertToRupiah(source.value));
        }

        function convertToRupiah(angka) {
            //change by calvin 26 september 2018
            //var rupiah = '';
            //var angkarev = angka.toString().split('').reverse().join('');
            //for (var i = 0; i < angkarev.length; i++) if (i % 3 === 0) rupiah += angkarev.substr(i, 3) + '.';
            //return rupiah.split('', rupiah.length - 1).reverse().join('') + ',00';
            return $.number(angka, 2, ',', '.');
            //end change by calvin 26 september 2018
        }

        function convertToAngka(rupiah) {

            //change by calvin 26 september 2018
            //return parseInt(rupiah.replace(/,.*|[^0-9]/g, ''), 10);
            return parseFloat(rupiah.replaceAll('.', '').replaceAll(',', '.'));
            //end change by calvin 26 september 2018
        }

        function editAddons(addonsId) {

            $modeEdit = 1;
            var link = '@Url.Action("EditCustAddons", "Admin", new { eksId = "replaceId" })';
            link = link.replace("replaceId", addonsId);

            //location.href = link;

            $.ajax({
                async: true,
                type: "GET",
                contentType: 'application/json',
                url: link,
                success: function (response) {
                    $('#form-partial').html(response);
                    $('.addons_table_section').hide();
                    $('.addons_editor_section').show();

                    //$('#Accounts_NamaTokoOnline').val(response.Addons_Customer.NamaTokoOnline);
                    //$('#Accounts_TGL_SUBSCRIPTION').val(response.Addons_Customer.TglSubscription);
                    //$('#Addons_Harga').val(response.Addons_Customer.Harga);

                    //debugger;
                    getAddons($('#Addons_Customer.NamaAddons').val());
                    getEmail($('#response.Addons_Customer.Account').val());
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        }

        function pass(addonsId) {
            this.$addonsId = addonsId;
        }

        function deleteAddons() {
            var link = '@Url.Action("DeleteCustAddonsCS", "Admin", new { eksId = "replaceId" })';
            link = link.replace("replaceId", this.$addonsId);

            location.href = link;
        }

        function getEmail(respon) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetAccount", "Admin")',
                contentType: 'application/json',
                cache: false,
                success: function (data) {
                    var emailList = [];
                    $.each(data,
                        function (i, item) {
                            emailList[i] = {
                                id: item.Email,
                                text: item.Email,
                                toko: item.NamaTokoOnline,
                                tglsub: new Date(parseInt(item.TGL_SUBSCRIPTION.substr(6, 13)))
                            };
                        });
                    var emailSelect = $('#Email_addons').selectize({
                        valueField: 'id',
                        searchField: 'text',
                        options: emailList,
                        onChange: function (value) {
                            var $objSup = $.grep(emailList, function (data) { return data.id == value });
                            if (value == null) {
                                //$("#Accounts_Email").val(null);
                                //emailSelect[0].selectize.setValue($('#Accounts_Email').val(), true);
                                $("#Addons_Customer_Account").val(null);
                                emailSelect[0].selectize.setValue($('#Addons_Customer_Account').val(), true);
                            } else {
                                //$("#Accounts_Email").val(value);
                                //emailSelect[0].selectize.setValue($('#Accounts_Email').val(), true);
                                //$.each(emailList,
                                //    function (i, item) {
                                //        if (item.id == value) {
                                //            //$('#Addons_Customer_RecNum').val(item.id);
                                //            $('#Accounts_NamaTokoOnline').val(item.toko);
                                //            $('#Accounts_TGL_SUBSCRIPTION').val(item.tglsub.getDate() + "/" + (item.tglsub.getMonth() + 1) + "/" + item.tglsub.getFullYear());
                                //        }
                                //    });

                                $("#Addons_Customer_Account").val(value);
                                emailSelect[0].selectize.setValue($('#Addons_Customer_Account').val(), true);

                                if ($objSup[0] != null) {
                                    $('#Addons_Customer_NamaTokoOnline').val($objSup[0].toko);
                                    $('#Addons_Customer_TglSubscription').val($objSup[0].tglsub.getDate() + "/" + ($objSup[0].tglsub.getMonth() + 1) + "/" + $objSup[0].tglsub.getFullYear())
                                }
                            }
                        }
                    });
                    emailSelect[0].selectize.setValue($('#Addons_Customer_Account').val(), true);
                    //if (respon != null) {
                    //    emailSelect[0].selectize.trigger('change', respon);
                    //}
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });
        }

        function getAddons(respon) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetAddons", "Admin")',
                contentType: 'application/json',
                cache: false,
                success: function (data) {
                    var addonsList = [];
                    $.each(data,
                        function (i, item) {
                            addonsList[i] = {
                                id: item.RecNum,
                                text: item.Fitur,
                                cost: item.Harga,
                            };
                        });

                    var addonsSelect = $('#Addons').selectize({
                        //valueField: 'text',
                        valueField: 'id',
                        searchField: 'text',
                        options: addonsList,
                        onChange: function (value) {
                            var $objSup = $.grep(addonsList, function (data) { return data.id == value });
                            if (value == null) {
                                //$("#namaaddons").val(null);
                                //addonsSelect[0].selectize.setValue($('#namaaddons').val(), true);
                                $('#Addons_Customer_ID_ADDON').val(null);
                                $('#Addons_Customer_NamaAddons').val(null);
                                addonsSelect[0].selectize.setValue($('#Addons_Customer_ID_ADDON').val(), true);
                            } else {
                                //debugger;
                                //$("#namaaddons").val(value);
                                //addonsSelect[0].selectize.setValue($('#namaaddons').val(), true);
                                //$.each(addonsList,
                                //    function (i, item) {
                                //        if (item.text == value) {
                                //            //$('#Addons_Fitur').val(item.text);
                                //            $('#Addons_Harga').val(item.cost);
                                //        }
                                //    });

                                $('#Addons_Customer_ID_ADDON').val(value);
                                addonsSelect[0].selectize.setValue($('#Addons_Customer_ID_ADDON').val(), true);
                                if ($objSup[0] != null) {
                                    $('#Addons_Customer_Harga').val($objSup[0].cost);
                                    $('#Addons_Customer_NamaAddons').val($objSup[0].text);
                                }
                            }
                        }
                    });
                    addonsSelect[0].selectize.setValue($('#Addons_Customer_ID_ADDON').val(), true);
                    //debugger;
                    //if (respon != null) {
                    //    addonsSelect[0].selectize.trigger('change', respon);
                    //}
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });
        }

        //add by nurul 21/10/2020
        function simpanAddonCust() {
            if ($('#Addons_Customer_NamaAddons').val() == undefined || $('#Addons_Customer_NamaAddons').val() == "" || $('#Addons_Customer_NamaAddons').val() == null) {
                alert("Silahkan pilih nama addons terlebih dahulu.");
                return false;
            }
            if ($('#Addons_Customer_Account').val() == undefined || $('#Addons_Customer_Account').val() == "" || $('#Addons_Customer_Account').val() == null) {
                alert("Silahkan pilih email terlebih dahulu.");
                return false;
            }
            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveCustAddonsCS", "Admin")',
                data: $('#form-addon-cust').serialize(),
                success: function (response) {
                    alert('Data berhasil tersimpan');
                    location.href = '@Url.Action("AddonsCustMenuCS")';
                    //if ($('#Account_TGL_SUBSCRIPTION').val() != '') {
                    //     $('#TGL').val($('#Account_TGL_SUBSCRIPTION').val());
                    //}
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });

        }
        //end add by nurul 21/10/2020
    </script>
}
@model MasterOnline.Models.Account
@{
    ViewBag.Title = "Register";
    var referral = Request.Params["ref"];
}
@section styles
{
    <style>
        html {
            -webkit-text-stroke-width: 0.5pt;
            text-rendering: optimizeLegibility !important;
            -webkit-font-smoothing: antialiased !important;
            -moz-osx-font-smoothing: grayscale !important;
        }
    </style>
}
<div class="loginColumns" id="loginColumns">
    <div class="row m-t">
        <div class="col-md-6">
            <a href="@Url.Action("Index", "Home", new {@ref = referral})">
                <img alt="logo" style="margin: 0 auto; display: block;" src="~/Content/Images/MO_new_logo.png" width="300">
            </a>
            <br />
            <h2 class="font-bold">
                Pendaftaran Akun Baru
            </h2>
            <p>Cukup masukkan beberapa data dan Anda siap untuk memulai!</p><br>
            <p>Pengaturan lebih detail bisa di lakukan setelah pendaftaran Anda selesai.</p><br>
            <p>
                <small>
                    <a href="~/Content/Static/termsandconditions.html#privacy">Kebijakan Privasi</a><!-- react-text: 153 -->&nbsp;&nbsp;&nbsp;<!-- /react-text -->
                    <a href="~/Content/Static/termsandconditions.html#terms">Syarat dan Ketentuan</a><!-- react-text: 155 -->&nbsp;&nbsp;&nbsp;<!-- /react-text -->
                    <a href="~/Content/Static/termsandconditions.html#security">Keamanan</a><br>
                </small>
            </p>
            <br />
            <div class="row">
                <div class="col-md-8">
                    <small>PT. Erasoft Teknologi Indonesia</small>
                </div>
                <div class="col-md-4 text-right">
                    <small>© 2017-2018</small>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="ibox-content">
                <div>
                    @*@if (ViewData["SuccessMessage"] != null)
                        {
                            <div class="alert alert-success">
                                @Html.Raw(ViewData["SuccessMessage"])
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                                <a onclick="return gtag_report_conversion('https://masteronline.co.id/login');" href="https://masteronline.co.id/login">
                                    Klik di sini untuk LOGIN!
                                </a>
                            </div>
                        }*@
                    @if (referral == null && ViewData.ModelState.Any(x => x.Value.Errors.Any()))
                    {
                        foreach (var modelError in ViewData.ModelState.SelectMany(x => x.Value.Errors))
                        {
                            <div class="alert alert-danger">
                                @modelError.ErrorMessage
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                        }
                    }
                    @using (Html.BeginForm("SaveAccount", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        if (!string.IsNullOrEmpty(referral))
                        {
                            <div class="form-group">
                                @Html.LabelFor(m => m.KODE_REFERRAL, "Kode Referral *", new { @class = "control-label control-label-bold" })
                                @*@Html.TextBoxFor(m => m.KODE_REFERRAL, new { @class = "form-control", maxlength = 50, @disabled = disabled, Value = referral }) 'change by nurul 22/4/2019*@
                                @Html.TextBoxFor(m => m.KODE_REFERRAL, new { @class = "form-control", maxlength = 50, @ReadOnly = true, Value = referral })
                            </div>
                        }
                        <div class="form-group">
                            @Html.LabelFor(m => m.Username, "Nama Lengkap *", new { @class = "control-label control-label-bold" })
                            @Html.TextBoxFor(m => m.Username, new { @class = "form-control", maxlength = 50, required = "required" })
                        </div>
                        @Html.HiddenFor(m => m.UserId, new { Value = "xxx" })
                        <div class="form-group">
                            @Html.LabelFor(m => m.Email, "Email *", new { @class = "control-label control-label-bold" })
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", maxlength = 50, required = "required" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.NoHp, "No. HP *", new { @class = "control-label control-label-bold" })
                            @Html.TextBoxFor(m => m.NoHp, new { @class = "form-control", maxlength = 50, required = "required" })
                        </div>
                        <div class="form-group">
                            <div class="col-lg-6" style="padding-left: 0;">
                                @Html.LabelFor(m => m.Password, "Password *", new { @class = "control-label control-label-bold" })
                                @Html.TextBoxFor(m => m.Password, new { @class = "form-control", maxlength = 50, type = "password", required = "required" })
                            </div>
                            <div class="col-lg-6" style="padding-right: 0; padding-left: 0">
                                @Html.LabelFor(m => m.ConfirmPassword, "Konfirmasi Password *", new { @class = "control-label control-label-bold" })
                                @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control", maxlength = 50, type = "password", required = "required" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.PhotoKtpUrl, "Foto KTP *", new { @class = "control-label control-label-bold", style = "margin-top: 10px;" })
                            <input type="file" class="form-control" id="ImageFile" name="ImageFile" required="required" max="" accept=".jpg" />
                            <span style="color: #b94a48" id="imageError"></span>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.NamaTokoOnline, "Nama Toko Online *", new { @class = "control-label control-label-bold" })
                            @Html.TextBoxFor(m => m.NamaTokoOnline, new { @class = "form-control", maxlength = 50, required = "required" })
                        </div>
                        <div class="form-group">
                            @Html.HiddenFor(m => m.DatabasePathMo)
                            @Html.HiddenFor(m => m.KODE_SUBSCRIPTION)
                            @Html.HiddenFor(m => m.jumlahUser)
                        </div>
                        <div class="space-15">
                            <p>Dengan menekan Daftar, saya mengkonfirmasi telah menyetujui Syarat dan Ketentuan</p>
                        </div>
                        <button id="btn-submit-daftar" type="button" class="btn btn-primary block full-width m-b" data-style="expand-right">
                            <span>Daftar</span>
                            <i class='fa fa-spinner fa-spin pull-right hide'></i>
                        </button><span>Sudah punya akun?</span><a href="@Url.Action("Login", "Account")"> Login di sini</a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<div style="visibility:hidden">
    <input id="txtSnapToken" />
</div>

@if (ViewData["SuccessMessage"] != null)
{
    <div class="modal fade" id="modalSuccessMessage" tabindex="-1" role="dialog" aria-labelledby="successMessageLabel" style="-webkit-text-stroke-width:0pt">
        <div class="modal-dialog" id="modal-success-message" role="document" style="margin-top:10px ;width:35%;background-color:white;border-radius:5px;padding:0px">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Master Online</h4>
            </div>
            <div class="alert alert-success">
                @Html.Raw(ViewData["SuccessMessage"])
            </div>
            <div class="modal-footer" style="padding:15px">
                <div>
                    @*<button onclick="openMidtrans()" style="background-color:mediumblue;width:100%;color:white;border-radius:4px;border:1px solid #cccccc">Lanjut</button>*@
                </div>
            </div>
        </div>
    </div>
}
<div class="modal fade" id="modalTransfer" tabindex="-1" role="dialog" aria-labelledby="transferLabel" style="-webkit-text-stroke-width:0pt">
    <div class="modal-dialog" id="modal-transfer" role="document" style="margin-top:10px ;width:35%;background-color:white;border-radius:5px;padding:0px">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title">Master Online</h4>
        </div>
        <div class="modal-content-subs" style="margin:0px 5px 5px;height:80vh;">
            <div>
                <p style="color:black">
                    Pembayaran dapat dilakukan dengan dua cara :
                    <br />
                    <br />
                    1. Pembayaran langsung ke rekening :
                    <br />
                    <b>-PT. ERASOFT TEKNOLOGI INDONESIA</b>
                    <br />
                    <b>-BCA NO. 4943025919</b>
                    <br />
                    Setelah Transfer Harap konfirmasi ke <b>Telp: 021-6349318</b> atau
                    <br />
                    <b>email : support@masteronline.co.id</b>
                    <br />
                    <b>UP : Erni / Indrie</b>
                </p>
            </div>
            <br />
            <br />
            <br />
            <div>
                <p style="color:black">
                    2. Pembayaran menggunakan Credit Card atau Virtual account dapat dilanjutkan dengan klik tombol di bawah ini.
                </p>
            </div>
            <div>
                <button onclick="openMidtrans()" style="background-color:cornflowerblue;width:100%;color:white">Lanjut</button>
                @*<center>(fasilitas ini menyusul)</center>*@
            </div>
        </div>
        <div class="modal-footer" style="padding:15px">
            <div>
                @*<button onclick="openMidtrans()" style="background-color:mediumblue;width:100%;color:white;border-radius:4px;border:1px solid #cccccc">Lanjut</button>*@
            </div>
        </div>
    </div>
</div>
<style>
    body {
        background-color: #f3f3f4;
        padding-top: 0;
    }

    hr {
        margin-top: 10px;
    }

    .font-bold {
        font-weight: 600;
    }

    h2 {
        font-size: 24px;
    }

    p {
        margin: 0;
    }

    .loginColumns, .passwordBox {
        margin: 0 auto;
        padding: 25px 20px 20px;
    }

    .loginColumns {
        max-width: 800px;
    }

    img[alt="logo"] {
        margin-bottom: 30px;
    }

    .ibox-content {
        clear: both;
        padding: 15px 20px 20px;
        border-color: #e7eaec;
        border-image: none;
        border-style: solid solid none;
        border-width: 1px 0;
    }

    .ibox-content, .ibox-title {
        background-color: #fff;
        color: inherit;
    }

    .space-15 {
        margin: 15px 0;
    }

    .block {
        display: block !important;
    }

    .m-b {
        margin-bottom: 15px;
    }

    .full-width {
        width: 100% !important;
    }

    .navbar {
        display: none;
    }
</style>
@section scripts
{
    @*add by Tri snap js*@
    @*<script type="text/javascript" src="https://app.sandbox.midtrans.com/snap/snap.js" data-client-key="SB-Mid-client-AyzcvZKcwAlD_0QY"></script>*@
    <script type="text/javascript" src="https://app.midtrans.com/snap/snap.js" data-client-key="Mid-client-sMzViq24qWRlPdPu"></script>
    @*SB-Mid-client-AyzcvZKcwAlD_0QY__Mid-client-sMzViq24qWRlPdPu*@
    <script>
        $(document).on('ready', function (event) {
            $("#alert-error-section").hide();

            initRequired();

            if ($('#modalSuccessMessage').length > 0) {
                $('#modalSuccessMessage').modal('show');
            }

            $('#btn-submit-daftar').click(function () {
                $('#btn-submit-daftar').attr("disabled", true);

                if ($('#Password').val() !== $('#ConfirmPassword').val()) {
                    $('#alert-error-section #message').text('Password tidak sama!');
                    $("#alert-error-section").show();
                    setTimeout(function () {
                        $("#alert-error-section").slideUp(500);
                    }, 2000);
                    $('#btn-submit-daftar').attr("disabled", false);
                    return;
                }

                //$('form').submit();

                var $form = $('#btn-submit-daftar').parents('form');
                var $formData = new FormData($('form')[0]);
                $.ajax({
                    type: "POST",
                    url: $form.attr('action'),
                    data: $formData,
                    processData: false,  // tell jQuery not to process the data
                    contentType: false,  // tell jQuery not to set contentType
                    beforeSend: function () {
                        $('#loading_spinner').show();
                    },
                    success: function (response) {
                        $('#btn-submit-daftar').attr("disabled", false);
                        $('#loading_spinner').hide();

                        if (response.error == null) {
                            if (response.token != null) {
                                //snap.pay(response.token, { skipOrderSummary: true });
                                $('#modalTransfer').modal('show');
                                $('#txtSnapToken').val(response.token);
                            }
                            else {
                                //window.location.href = response;
                                //change by nurul 14/8/2019
                                //$('#loginColumns').html(response);
                                thankyou();
                                //end change by nurul 14/8/2019
                            }
                        } else {
                            alert(response.error);
                        }
                    },
                    error: function (xhr, status, error) {
                        $('#btn-submit-daftar').attr("disabled", false);
                        console.log(error);
                        $('#loading_spinner').hide();
                    }
                });
            });

            $('form').submit(function () {
                if (!validateForm()) return false;

                $('.fa-spin').removeClass('hide');
            });

            var validImage = ["image/jpeg"];

            $('#ImageFile').change(function () {
                $('#imageError').html('');

                var file = this.files[0];
                var fileType = file["type"];
                if ($.inArray(fileType, validImage) < 0) {
                    $('#imageError').html('Hanya boleh file berformat .jpg !');
                    $(this).val('');
                    return;
                }

                if (((file.size / 1024) / 1024).toFixed(4) > 4) {
                    $('#imageError').html('Ukuran file tidak bisa lebih besar dari 4 mb !');
                    $(this).val('');
                    return;
                }
            });
        });

        function openMidtrans() {
            if ($('#txtSnapToken').val() != "") {
                snap.pay($('#txtSnapToken').val(), { skipOrderSummary: true });
            }
            $('#modalTransfer').modal('hide');
        }
        function isEmptyOrSpaces(str) {
            return str === null || str.match(/^ *$/) !== null;
        }

        function isEmail(email) {
            var regex = /^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
            return regex.test(email);
        }

        function initRequired() {
            $('#Email').on('change',
                function () {
                    cekEmail($(this));
                });

            $('form input[required="required"], form textarea[required="required"]').keydown(function (e) {
                var code = e.keyCode || e.which;
                if (code == '9') {
                    var $this = $(this);
                    var $value = $this.val();

                    if ($value == '' || isEmptyOrSpaces($value)) {
                        $this.closest('.form-group').addClass('has-error');

                        if (!$this.closest('div').find('.text-danger').length) {
                            $this.closest('div').append('<span class="text-danger">Kolom ini tidak boleh kosong!</span>');
                        }
                    } else {
                        $this.closest('.form-group').removeClass('has-error');
                        $this.closest('div').find('.text-danger').remove();
                    }
                }
            }).on('blur change', function () {
                var $this = $(this);
                var $value = $this.val();

                if ($value == '' || isEmptyOrSpaces($value)) {
                    $this.closest('.form-group').addClass('has-error');

                    if (!$this.closest('div').find('.text-danger').length) {
                        $this.closest('div').append('<span class="text-danger">Kolom ini tidak boleh kosong!</span>');
                    }
                } else {
                    $this.closest('.form-group').removeClass('has-error');
                    $this.closest('div').find('.text-danger').remove();
                }
            });

            $('form select[required="required"]').on('blur change', function () {
                var $this = $(this);
                var $value = $this.find('option:selected').text();

                if ($value == null || $value == 'Harap pilih' || $value == 'Silakan pilih') {
                    $this.parent().parent('.form-group').addClass('has-error');
                    $this.css('border', 'solid 1px #a94442');

                    if (!$this.closest('div').find('.text-danger').length) {
                        $this.closest('div').append('<span class="text-danger">Kolom ini tidak boleh kosong!</span>');
                    }
                } else {
                    $this.parent().find('.selectize-input').css('border', 'solid 1px #d0d0d0');
                    $this.parent().parent('.form-group').removeClass('has-error');

                    if ($this.closest('div').hasClass('input-group')) {
                        $this.parent().parent().find('.text-danger').remove();
                    } else {
                        $this.closest('div').find('.text-danger').remove();
                    }
                }
            });

            $('form .selectized[required="required"]').on('blur change', function () {
                var $this = $(this);
                var $value = $this.find('option:selected').text();

                if ($value == null || $value == 'Harap pilih' || $value == 'Silakan pilih') {
                    $this.parent().parent('.form-group').addClass('has-error');
                    $this.css('border', 'solid 1px #a94442');

                    if (!$this.closest('div').find('.text-danger').length) {
                        $this.closest('div').append('<span class="text-danger">Kolom ini tidak boleh kosong!</span>');
                    }
                } else {
                    $this.parent().find('.selectize-input').css('border', 'solid 1px #d0d0d0');
                    $this.parent().parent('.form-group').removeClass('has-error');

                    if ($this.closest('div').hasClass('input-group')) {
                        $this.parent().parent().find('.text-danger').remove();
                    } else {
                        $this.closest('div').find('.text-danger').remove();
                    }
                }
            });

            $("form input[type='number']").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                    // Allow: Ctrl/cmd+A
                    (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                    // Allow: Ctrl/cmd+C
                    (e.keyCode == 67 && (e.ctrlKey === true || e.metaKey === true)) ||
                    // Allow: Ctrl/cmd+X
                    (e.keyCode == 88 && (e.ctrlKey === true || e.metaKey === true)) ||
                    // Allow: Ctrl/cmd+v
                    (e.keyCode == 86 && (e.ctrlKey === true || e.metaKey === true)) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $("form input[type='email']").keydown(function (e) {
                var code = e.keyCode || e.which;
                if (code == '9') {
                    var $this = $(this);
                    var $value = $this.val();

                    if ($value == '' || isEmptyOrSpaces($value)) {
                        $this.closest('.form-group').addClass('has-error');

                        if (!$this.closest('div').find('.text-danger').length) {
                            $this.closest('div').append('<span class="text-danger">Kolom ini tidak boleh kosong!</span>');
                        }
                    } else {
                        $this.closest('.form-group').removeClass('has-error');
                        $this.closest('div').find('.text-danger').remove();

                        if (!isEmail($value)) {
                            $this.closest('.form-group').addClass('has-error');

                            if (!$this.closest('div').find('.text-danger').length)
                                $this.closest('div').append('<span class="text-danger">Email tidak valid!</span>');
                        } else {
                            $this.closest('.form-group').removeClass('has-error');
                            $this.closest('div').find('.text-danger').remove();
                        }
                    }
                }
            }).on('blur change', function () {
                var $this = $(this);
                var $value = $this.val();

                if ($value == '' || isEmptyOrSpaces($value)) {
                    $this.closest('.form-group').addClass('has-error');

                    if (!$this.closest('div').find('.text-danger').length) {
                        $this.closest('div').append('<span class="text-danger">Kolom ini tidak boleh kosong!</span>');
                    }
                } else {
                    $this.closest('.form-group').removeClass('has-error');
                    $this.closest('div').find('.text-danger').remove();

                    if (!isEmail($value)) {
                        $this.closest('.form-group').addClass('has-error');

                        if (!$this.closest('div').find('.text-danger').length)
                            $this.closest('div').append('<span class="text-danger">Email tidak valid!</span>');
                    } else {
                        $this.closest('.form-group').removeClass('has-error');
                        $this.closest('div').find('.text-danger').remove();
                    }
                }
            });

            //Otomatis mengikuti attribute maxlength / stringlength
            $("form input[data-val-length-max]").each(function () {
                var $this = $(this);
                var data = $this.data();
                $this.attr("maxlength", data.valLengthMax);
            });

            $('form input[type="text"]').each(function () {
                var $this = $(this);
                var $name = $this.attr('name');

                if ($name != null) {
                    if ($name.indexOf('TLP') !== -1 || $name.indexOf('TELEPON') !== -1) {
                        $this.attr("maxlength", 15);
                    }
                }
            });

            $('form input.limited_number_textbox[type="number"]').each(function () {
                var $this = $(this);
                $this.attr('oninput', 'maxLengthCheck(this)');
            });
        }

        function cekEmail($this) {
            var link = '@Url.Action("CekEmailPengguna", "Account", new { emailPengguna = "replaceEmail" })';
            link = link.replace("replaceEmail", $this.val());

            $.ajax({
                type: "GET",
                url: link,
                success: function (response) {
                    console.log(response);
                    if (!response.Available && response.CekNull != null) {
                        $this.closest('.form-group').addClass('has-error');

                        if (!$this.closest('div').find('.text-danger').length) {
                            $this.closest('div').append('<span class="text-danger">Email ini sudah digunakan!</span>');
                        }
                    }
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        }

        function validateForm() {
            var $isValid = true;

            $('form input[required="required"], form textarea[required="required"]').each(function () {
                var $this = $(this);
                var $value = $this.val();

                if ($value == '' || isEmptyOrSpaces($value)) {
                    $this.closest('.form-group').addClass('has-error');

                    if (!$this.closest('div').find('.text-danger').length) {
                        $this.closest('div').append('<span class="text-danger">Kolom ini tidak boleh kosong!</span>');
                    }

                    $isValid = false;
                }
            });

            $('form select[required="required"]').each(function () {
                var $this = $(this);
                var $value = $this.find('option:selected').text();

                if ($value == null || $value == 'Harap pilih' || $value == 'Silakan pilih') {
                    $this.parent().parent('.form-group').addClass('has-error');
                    $this.parent().find('.selectize-input').css('border', 'solid 1px #a94442');

                    if (!$this.closest('div').find('.text-danger').length) {
                        if ($this.closest('div').hasClass('input-group')) {
                            $this.parent().parent().append('<span class="text-danger">Kolom ini tidak boleh kosong!</span>');
                        } else {
                            $this.closest('div').append('<span class="text-danger">Kolom ini tidak boleh kosong!</span>');
                        }
                    }

                    $isValid = false;
                }
            });

            $('form .selectized').each(function () {
                var $this = $(this);
                var $inputSelectize = $this.parent().find('.item');

                if ($inputSelectize.length == 0) {
                    $this.parent().parent('.form-group').addClass('has-error');
                    $this.parent().find('.selectize-input').css('border', 'solid 1px #a94442');

                    if (!$this.closest('div').find('.text-danger').length) {
                        if ($this.closest('div').hasClass('input-group')) {
                            $this.parent().parent().append('<span class="text-danger">Kolom ini tidak boleh kosong!</span>');
                        } else {
                            $this.closest('div').append('<span class="text-danger">Kolom ini tidak boleh kosong!</span>');
                        }
                    }

                    $isValid = false;
                }
            });

            var $errorElement = $('form').find('.has-error');
            if ($errorElement.length) $isValid = false;

            return $isValid;
        }

        function thankyou() {
            var link = '@Url.Action("RegisterThankYou", "Account")';
            //link = link.replace("replaceId", this.$accId);

            location.href = link;
        }
    </script>
}

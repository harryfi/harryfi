@using System.Globalization
@using MasterOnline.ViewModels
@model LINKFTP
@{
    ViewBag.Title = "Parameter Link FTP";
    Layout = "~/Views/Shared/_LayoutManage.cshtml";
    var dataSession = Session["SessionInfo"] as AccountUserViewModel;

    long accId;
    var username = "";
    var context = new MoDbContext("");
    if (dataSession?.User != null)
    {
        accId = context.User.Single(u => u.Email == dataSession.User.Email).AccountId;
        username = context.Account.Single(a => a.AccountId == accId).Username;
    }
    else
    {
        username = dataSession?.Account.Username;
        accId = (dataSession?.Account?.AccountId ?? 0);
    }
    if (username.Length > 20)
    {
        username = username.Substring(0, 17) + "...";
    }
}
@section styles
{
    <link href="~/Content/build/css/selectivity-jquery.min.css" rel="stylesheet" />

    <style>
        #parameterlinkftp-section > div {
            background-color: #fff;
            padding: 20px;
        }

        #hapus_label {
            color: orange;
            font-weight: bold;
        }
    </style>
}

<div class="row" id="parameterlinkftp-section">
    <div class="col-lg-12 col-md-12">
        <div class="row parameterlinkftp_editor_section">
            @*<div class="col-lg-12 col-md-12">
                <button class="btn btn-primary btn_excel_stokopname" onclick="DownloadDataFakturCsv()" id="datatransfercsv">Download CSV</button>
            </div>*@
            <div class="col-lg-12">
                <div class="page-editor">
                    <h2 class="editor-title">Parameter Link FTP</h2>
                    <span class="title-accent"></span>
                    <div class="form-horizontal">
                        <div class="row">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                <div class="x_panel">
                                    <div class="x_title">
                                        <h2 style="font-size: 16px">Detail Parameter Link FTP</h2>
                                        <ul class="nav navbar-right panel_toolbox">
                                            <li>
                                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                                            </li>
                                        </ul>
                                        <div class="clearfix"></div>
                                    </div>
                                    <div class="x_content">
                                        @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
                                        {
                                            foreach (var modelError in ViewData.ModelState.SelectMany(x => x.Value.Errors))
                                            {
                                                <div class="alert alert-danger">
                                                    <span class="message-error">@modelError.ErrorMessage</span>
                                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>
                                            }
                                        }
                                        <br>
                                        @using (Html.BeginForm("SaveLinkFtp", "Manage", FormMethod.Post, new { enctype = "multipart/form-data", id = "form-parameterlinkftp" }))
                                        {
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.IP, "IP *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @Html.TextBoxFor(m => m.IP, new { @class = "form-control", @id = "IP", required = "required" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.LOGIN, "Username *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @Html.TextBoxFor(m => m.LOGIN, new { @class = "form-control", required = "required" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.PASSWORD, "Password *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @Html.TextBoxFor(m => m.PASSWORD, new { @class = "form-control", required = "required", type = "password" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.STATUS_FTP, "Status FTP", new { @class = "control-label control-label-bold col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @Html.HiddenFor(m => m.STATUS_FTP)
                                                    @if (Model != null)
                                                    {
                                                        if (Model.STATUS_FTP == "0")
                                                        {
                                                            @Html.CheckBox("StatusFtp", true, new { @checked = true, @style = "width:30px; height:28px;" })
                                                            @*<select style="display:none" single class="selectize-dropdown single" id="StatusFtp" placeholder="Harap pilih" required="disabled"></select>*@
                                                        }
                                                        else if (Model.STATUS_FTP == "1")
                                                        {
                                                            @Html.CheckBox("StatusFtp", false, new { @checked = false, @style = "width:30px; height:28px;" })
                                                            @*<select style="display:none" single class="selectize-dropdown single" id="StatusFtp" placeholder="Harap pilih" required="disabled"></select>*@
                                                        }
                                                        else
                                                        {
                                                            @Html.CheckBox("StatusFtp", true, new { @checked = true, @style = "width:30px; height:28px;" })
                                                            @*<select style="display:none" single class="selectize-dropdown single" id="StatusFtp" placeholder="Harap pilih" required="disabled"></select>*@
                                                        }
                                                    }
                                                    else
                                                    {
                                                        @Html.CheckBox("StatusFtp", true, new { @checked = true, @style = "width:30px; height:28px;" })
                                                        @*<select style="display:none" single class="selectize-dropdown single" id="StatusFtp" placeholder="Harap pilih" required="disabled"></select>*@
                                                    }
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.PPN, "PPn", new { @class = "control-label control-label-bold col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @Html.HiddenFor(m => m.PPN)
                                                    <select class="form-control" id="select_ppn" required="required">
                                                        @if (Model != null)
                                                        {
                                                            switch (Model.PPN)
                                                            {
                                                                case "0":
                                                                    <option value="0" selected>Exclude PPn</option>
                                                                    <option value="1">Include PPn</option>
                                                                    break;
                                                                case "1":
                                                                    <option value="0">Exclude PPn</option>
                                                                    <option value="1" selected>Include PPn</option>
                                                                    break;
                                                                case null:
                                                                    <option value="0" selected>Exclude PPn</option>
                                                                    <option value="1">Include PPn</option>
                                                                    break;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <option value="0" selected>Exclude PPn</option>
                                                            <option value="1">Include PPn</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.JAM1, "Schedule 1 *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    <div class="input-group date">
                                                        @Html.TextBoxFor(m => m.JAM1, new { @class = "form-control", required = "required" })
                                                        <span class="input-group-addon">
                                                            <span class="glyphicon glyphicon-time"></span>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.JAM2, "Schedule 2", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    <div class="input-group date">
                                                        @Html.TextBoxFor(m => m.JAM2, new { @class = "form-control" })
                                                        <span class="input-group-addon">
                                                            <span class="glyphicon glyphicon-time"></span>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                            @*<div class="form-group">
                                                @Html.LabelFor(m => m.JAM3, "Jam 3", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    <div class="input-group date">
                                                        @Html.TextBoxFor(m => m.JAM3, new { @class = "form-control" })
                                                        <span class="input-group-addon">
                                                            <span class="glyphicon glyphicon-time"></span>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.JAM4, "Jam 4", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    <div class="input-group date">
                                                        @Html.TextBoxFor(m => m.JAM4, new { @class = "form-control" })
                                                        <span class="input-group-addon">
                                                            <span class="glyphicon glyphicon-time"></span>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.JAM5, "Jam 5", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    <div class="input-group date">
                                                        @Html.TextBoxFor(m => m.JAM5, new { @class = "form-control" })
                                                        <span class="input-group-addon">
                                                            <span class="glyphicon glyphicon-time"></span>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>*@
                                            <input type="button" class="btn btn-primary pull-right" value="Simpan" id="simpan_btn" onclick="SimpanParameterLinkFtp(this)" />
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script src="~/Content/build/js/selectivity-jquery.min.js" type="text/javascript"></script>
    <script src="~/Content/build/js/bootstrap-datetimepicker.js"></script>
    <script type="text/javascript" src="~/Content/build/js/jquery.maskedinput-1.2.1.pack.js"></script>
    <script type="text/javascript">
        $(function() {
            $("#IP").mask("999.999.999.999");
        });
    </script>

    <script type="text/javascript">
        $supplierId = "";
        //add by nurul 12/2/2019
        var $page = window.text;
        //end add by nurul 12/2/2019
        $(document).ready(function () {
            var d = new Date();
            var month = d.getMonth();
            var day = d.getDate();
            var year = d.getFullYear();
            var dateNow = new Date(year, month, day, 00, 00);
            //$('#JAM1').datetimepicker({
            //    format: 'HH:mm'
            //});
            //$('#JAM2').datetimepicker({
            //    format: 'HH:mm'
            //});
            //$('#JAM3').datetimepicker({
            //    format: 'HH:mm'
            //});
            //$('#JAM4').datetimepicker({
            //    format: 'HH:mm'
            //});
            //$('#JAM5').datetimepicker({
            //    format: 'HH:mm'
            //});

            var statusUploadFTP = $('#StatusFtp').selectize({
                create: true,
                maxItems: 1,
                multiple: false,
                addOption: false,
                sortField: 'text',
                valueField: 'value',
                labelField: 'text',
                searchField: ['text'],
                options: [
                    { value: "true", text: "Aktif", selected: true },
                    { value: "false", text: "Tidak Aktif", selected: true },
                ],
                selectedField: "selected",
                onChange: function (value) {
                    if (value == "true") {
                        statusUploadFTP[0].selectize.setValue($('#StatusFtp').val(), true);
                    }
                    else if (value == "false") {
                        statusUploadFTP[0].selectize.setValue($('#StatusFtp').val(), true);
                    }
                }
            });

        });

        function SimpanParameterLinkFtp(btnClicked) {
            if (!validateForm()) {
                window.scrollTo(0, 0);
                alert('Ada field yang harus terisi!');
                return false;
            }

            var $form = $(btnClicked).parents('form');

            if ($("#StatusFtp").is(":checked") == true) {
                $('#STATUS_FTP').val("0");
                $('#linkMP').val("0");
            } else {
                $('#STATUS_FTP').val("1");
                $('#linkMP').val("1");
            }

            $('#PPN').val($("#select_ppn option:selected").val());;

            $.ajax({
                type: "POST",
                url: $form.attr('action'),
                data: $form.serialize(),
                beforeSend: function () {
                    $('#loading_spinner').show();
                },
                success: function (response) {
                    if (response.Errors == null) {
                        DownloadDataFakturCsv();
                        $('#close-editor').click();
                        $("html, body").animate({ scrollTop: 0 }, "slow");
                        $('#loading_spinner').hide();
                    } else {
                        alert(response.Errors);

                        $('#loading_spinner').hide();
                    }
                },
                error: function (xhr, status, error) {
                    console.log(error);
                    $('#loading_spinner').hide();
                }
            });

            return false;
        }

        function DownloadDataFakturCsv() {
            $('#loading_spinner').show();
            var link = '@Html.Raw(Url.Action("ListFakturToCsv", "TransferExcel"))';

            $.ajax({
                xhr: function () {
                    var xhr = $.ajaxSettings.xhr();
                    xhr.onprogress = function (evt) {
                        if (evt.lengthComputable) {
                           $('#loading_spinner').hide();
                        }
                        $('#loading_spinner').hide();
                    };
                    return xhr;
                },
                type: "GET",
                url: link,
                contentType: 'application/json',
                cache: false,
                success: function (response) {
                    $('#loading_spinner').hide();
                    if (response.Errors.length == 0) {
                        //var bytes = new Uint8Array(response.byteExcel);
                        //saveByteArray(response.namaFile, bytes);
                    } else {
                        alert(response.Errors[0]);
                    }

                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });
        }

        function saveByteArray(reportName, byte) {
            var blob = new Blob([byte], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" });
            var link = document.createElement('a');
            link.href = window.URL.createObjectURL(blob);
            var fileName = reportName;
            link.download = fileName;
            link.click();
        }
    </script>
}
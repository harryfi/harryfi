@using System.Globalization
@using MasterOnline.ViewModels
@model MasterOnline.ViewModels.CustomerViewModel
@{
    //var dataSession = Session["SessionInfo"] as AccountUserViewModel;
    var username = "";
    var context = new MoDbContext("");
    //if (dataSession?.User != null)
    //{
    //    var accId = context.User.Single(u => u.Email == dataSession.User.Email).AccountId;
    //    username = context.Account.Single(a => a.AccountId == accId).Username;
    //}
    //else
    //{
    //    username = dataSession?.Account.Username;
    //}

    var sessionAccount = HttpContext.Current.Session["SessionAccount"];
    var sessionAccountUserID = HttpContext.Current.Session["SessionAccountUserID"];
    var sessionAccountUserName = HttpContext.Current.Session["SessionAccountUserName"];
    var sessionAccountEmail = HttpContext.Current.Session["SessionAccountEmail"];
    var sessionAccountTglSub = HttpContext.Current.Session["SessionAccountTglSub"];
    var sessionAccountKodeSub = HttpContext.Current.Session["SessionAccountKodeSub"];
    var sessionAccountDataSourcePathDebug = HttpContext.Current.Session["SessionAccountDataSourcePathDebug"];
    var sessionAccountDataSourcePath = HttpContext.Current.Session["SessionAccountDataSourcePath"];
    var sessionAccountDatabasePathErasoft = HttpContext.Current.Session["SessionAccountDatabasePathErasoft"];

    var sessionUser = System.Web.HttpContext.Current.Session["SessionUser"];
    var sessionUserUserID = System.Web.HttpContext.Current.Session["SessionUserUserID"];
    var sessionUserUsername = System.Web.HttpContext.Current.Session["SessionUserUsername"];
    var sessionUserEmail = System.Web.HttpContext.Current.Session["SessionUserEmail"];
    var sessionUserAccountID = System.Web.HttpContext.Current.Session["SessionUserAccountID"];

    if (sessionUser != null)
    {
        var accId = context.User.Single(u => u.Email == sessionUserEmail.ToString()).AccountId;
        username = context.Account.Single(a => a.AccountId == accId).Username;
    }
    else
    {
        username = sessionAccountUserName.ToString();
    }

    if (username.Length > 20)
    {
        username = username.Substring(0, 17) + "...";
    }
}
@Html.AntiForgeryToken()
<table id="table-gudang-tokped" class="table table-bordered" role="grid">
    <thead>
        <tr>
            <th width="30%">Kode Gudang</th>
            <th id="header-whid" width="50%">Warehouse ID Marketplace</th>
            <th width="20%" style="text-align:center">Simpan/Hapus</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ListMappingGudang.ToList().OrderBy(p => p.RecNum))
        {
            var nama = "";
            var namaGudangMo = Model.ListGudang.Where(a => a.Kode_Gudang == item.GD_MO).FirstOrDefault().Nama_Gudang;
            if (!string.IsNullOrEmpty(namaGudangMo))
            {
                nama = " (" + namaGudangMo + ")";
            }
            var gdMp = "";
            var namaMp = "";
            if (!string.IsNullOrEmpty(item.GD_MP))
            {
                gdMp = item.GD_MP;
            }
            if (!string.IsNullOrEmpty(item.NAMA_GD_MP))
            {
                namaMp = " (" + item.NAMA_GD_MP + ")";
            }
            <tr data-gudang-id="opt-@item.RecNum" class="detail-mapping">
                <td>@item.GD_MO @nama</td>
                @*<td id="detail-whid">@item.GD_MP</td>*@
                <td id="detail-whid">@gdMp @namaMp</td>
                <td class="edit-hapus-col">
                    <button class="btn btn-danger" type="button" onclick="deleteMappingGudang('@item.RecNum')">
                        <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                    </button>
                </td>
            </tr>
        }
            <tr id="new-mapping">
                @Html.HiddenFor(m => m.MappingGudang.RecNum)
                @Html.HiddenFor(m => m.MappingGudang.CUST)
                @*@Html.HiddenFor(m => m.MappingGudang.CUST, new { Value = Model.Customers?.CUST })*@
                <td class="kode-gd-mo">
                    <select id="selectGDMO" placeholder="Harap Pilih" required="required"></select>
                    @Html.HiddenFor(m => m.MappingGudang.GD_MO)
                </td>
                <td id="detail-whid" class="nama-gd-mp">
                    <select id="selectGDMP" placeholder="Harap Pilih" required="required"></select>
                    @Html.HiddenFor(m => m.MappingGudang.GD_MP)
                    @Html.HiddenFor(m => m.MappingGudang.NAMA_GD_MP)
                </td>
                <td class="edit-hapus-col">
                    <button type="button" class="btn btn-primary" onclick="simpanMappingGudang()">
                        <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>
                    </button>
                </td>
            </tr>
    </tbody>
</table>
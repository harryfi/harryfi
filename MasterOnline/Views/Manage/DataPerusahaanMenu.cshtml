@using MasterOnline.Models
@using MasterOnline.ViewModels
@model MasterOnline.ViewModels.DataPerusahaanViewModel
@{
    ViewBag.Title = "Profil Saya";
    Layout = "~/Views/Shared/_LayoutManage.cshtml";

    //var dataSession = Session["SessionInfo"] as AccountUserViewModel;
    var username = "";
    var userId = "";
    var context = new MoDbContext("");
    //if (dataSession?.User != null)
    //{
    //    var accId = context.User.Single(u => u.Email == dataSession.User.Email).AccountId;
    //    username = context.Account.Single(a => a.AccountId == accId).Username;
    //    userId = context.Account.Single(a => a.AccountId == accId).UserId;
    //    context.Dispose();
    //}
    //else
    //{
    //    username = dataSession?.Account.Username;
    //    userId = dataSession?.Account.UserId;
    //}

    var sessionAccount = HttpContext.Current.Session["SessionAccount"];
    var sessionAccountUserID = HttpContext.Current.Session["SessionAccountUserID"];
    var sessionAccountUserName = HttpContext.Current.Session["SessionAccountUserName"];
    var sessionAccountEmail = HttpContext.Current.Session["SessionAccountEmail"];
    var sessionAccountTglSub = HttpContext.Current.Session["SessionAccountTglSub"];
    var sessionAccountKodeSub = HttpContext.Current.Session["SessionAccountKodeSub"];
    var sessionAccountDataSourcePathDebug = HttpContext.Current.Session["SessionAccountDataSourcePathDebug"];
    var sessionAccountDataSourcePath = HttpContext.Current.Session["SessionAccountDataSourcePath"];
    var sessionAccountDatabasePathErasoft = HttpContext.Current.Session["SessionAccountDatabasePathErasoft"];

    var sessionUser = System.Web.HttpContext.Current.Session["SessionUser"];
    var sessionUserUserID = System.Web.HttpContext.Current.Session["SessionUserUserID"];
    var sessionUserUsername = System.Web.HttpContext.Current.Session["SessionUserUsername"];
    var sessionUserEmail = System.Web.HttpContext.Current.Session["SessionUserEmail"];
    var sessionUserAccountID = System.Web.HttpContext.Current.Session["SessionUserAccountID"];

    if (sessionUser != null)
    {
        var accId = context.User.Single(u => u.Email == sessionUserEmail.ToString()).AccountId;
        username = context.Account.Single(a => a.AccountId == accId).Username;
        userId = context.Account.Single(a => a.AccountId == accId).UserId;
        context.Dispose();
    }
    else
    {
        username = sessionAccountUserName.ToString();
        userId = sessionAccountUserID.ToString();
    }

    if (username.Length > 20)
    {
        //username = username.Substring(0, 17) + "...";
        username = username.Substring(0, 20);
    }

}

@section styles
{
    <link href="~/Content/build/css/selectivity-jquery.min.css" rel="stylesheet" />
    <link href="~/Content/selectize.css" rel="stylesheet" />

    <style>
        #data-usaha-section > div {
            background-color: #fff;
            padding: 20px;
        }

        #DataUsaha_ALAMAT_PT {
            resize: vertical;
            height: 100px;
            max-height: 100px;
        }

        .logo_perusahaan_section {
            padding: 0 10px 10px 10px;
        }

            .logo_perusahaan_section > .box_upload {
                width: 200px;
                height: 200px;
                border: dashed 1.5px #bbb;
                border-radius: 10px;
                background-color: #f7f7f7;
                background-image: url('');
                text-align: center;
                display: table;
                cursor: pointer;
            }

        .box_upload > .box_upload_placeholder {
            color: #ccc;
            font-size: 20px;
            display: table-cell;
            vertical-align: middle;
        }

        .btn_hapus_logo {
            position: absolute;
            bottom: 25px;
            left: 20px;
        }
    </style>
    <style>
        .foto_produk_section {
            padding: 10px;
        }

            .foto_produk_section > .box_upload {
                width: 250px;
                height: 250px;
                border: dashed 1.5px #bbb;
                border-radius: 10px;
                background-color: #f7f7f7;
                background-image: url('');
                text-align: center;
                display: table;
                margin: 0 auto;
                cursor: pointer;
            }

        .box_upload > .box_upload_placeholder {
            color: #ccc;
            font-size: 20px;
            display: table-cell;
            vertical-align: middle;
        }

        .btn_hapus_foto_produk {
            position: absolute;
            bottom: 15px;
            left: 48px;
        }
    </style>
    <style>
        .checkbox-container {
            display: block;
            position: relative;
            /*padding-left: 35px;*/
            margin-top: 4px;
            cursor: pointer;
            font-size: 11px;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

            /* Hide the browser's default checkbox */
            .checkbox-container input {
                position: relative;
                opacity: 100;
                cursor: pointer;
                display: none;
            }

        /* Create a custom checkbox */
        .checkmark {
            position: absolute;
            top: 0;
            /*remark by calvin 17 juni 2019, perbaikan tampilan suryadi*/
            /*left: 18px;*/
            /*end remark by calvin 17 juni 2019, perbaikan tampilan suryadi*/
            height: 25px;
            width: 25px;
            /*background-color: #eee;*/
            background-color: #fff;
            border: solid 1px #ccc;
        }

        /* On mouse-over, add a grey background color */
        .checkbox-container:hover input ~ .checkmark {
            background-color: #ccc;
        }

        /* When the checkbox is checked, add a blue background */
        .checkbox-container input:checked ~ .checkmark {
            background-color: #2196F3;
        }

        /* Create the checkmark/indicator (hidden when not checked) */
        .checkmark:after {
            content: "";
            position: absolute;
            display: none;
        }

        /* Show the checkmark when checked */
        .checkbox-container input:checked ~ .checkmark:after {
            display: block;
        }

        /* Style the checkmark/indicator */
        .checkbox-container .checkmark:after {
            left: 9px;
            top: 5px;
            width: 6px;
            height: 10px;
            border: solid white;
            border-width: 0 3px 3px 0;
            -webkit-transform: rotate(45deg);
            -ms-transform: rotate(45deg);
            transform: rotate(45deg);
        }
    </style>
}

<div class="row" id="data-usaha-section">
    <div class="col-lg-12 col-md-12">
        <div class="col-lg-12">
            <div class="page-editor">
                <h2 class="editor-title">Profil Saya</h2>
                <span class="title-accent"></span>
                <button id="close-editor" type="button" class="pull-right page-close">
                    <span class="close-btn thick"></span>
                </button>
                <div class="form-horizontal">
                    <div class="row">
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="x_panel">
                                <div class="x_title">
                                    <h2 style="font-size: 16px">Detail Data</h2>
                                    <ul class="nav navbar-right panel_toolbox">
                                        <li>
                                            <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                                        </li>
                                    </ul>
                                    <div class="clearfix"></div>
                                </div>
                                <div class="x_content">
                                    @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
                                    {
                                        foreach (var modelError in ViewData.ModelState.SelectMany(x => x.Value.Errors))
                                        {
                                            <div class="alert alert-danger">
                                                <span class="message-error">@modelError.ErrorMessage</span>
                                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                            </div>
                                        }
                                    }
                                    <br>
                                    @using (Html.BeginForm("SaveDataUsaha", "Manage", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                    {
                                        @Html.HiddenFor(m => m.DataUsaha.USERNAME, new { Value = username })
                                        @Html.HiddenFor(m => m.DataUsaha.VALIDASI_U_MUKA, new { Value = "1" })
                                        @Html.HiddenFor(m => m.DataUsaha.KODE_BRG_STYLE, new { Value = "-" })
                                        @Html.HiddenFor(m => m.DataUsaha.GUDANG_SALESMAN, new { Value = "0" })
                                        @Html.HiddenFor(m => m.DataUsaha.BARANG_SAMA, new { Value = "0" })
                                        @Html.HiddenFor(m => m.DataUsaha.EDIT_BONUS, new { Value = "0" })
                                        @Html.HiddenFor(m => m.DataUsaha.VALIDASI_BRG_FAKTUR, new { Value = "0" })
                                        @Html.HiddenFor(m => m.DataUsaha.METODA_DISCOUNT, new { Value = "0" })
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.DataUsaha.NAMA_PT, "Nama Toko *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                            <div class="col-md-6 col-sm-6 col-xs-12">
                                                @(Model?.DataUsaha?.NAMA_PT != "PT ERAKOMP INFONUSA" ? Html.TextBoxFor(m => m.DataUsaha.NAMA_PT, new { @class = "form-control", required = "required" }) : Html.TextBoxFor(m => m.DataUsaha.NAMA_PT, new { @class = "form-control", required = "required", Value = "" }))
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.DataUsaha.NPWP, "NPWP", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                            <div class="col-md-6 col-sm-6 col-xs-12">
                                                @(Model?.DataUsaha?.NAMA_PT != "PT ERAKOMP INFONUSA" ? Html.TextBoxFor(m => m.DataUsaha.NPWP, new { @class = "form-control limited_number_textbox", type = "number" }) : Html.TextBoxFor(m => m.DataUsaha.NPWP, new { @class = "form-control limited_number_textbox", type = "number", required = "required", Value = "" }))
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.DataUsaha.METODA_NO, "Metoda HPP", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                            <div class="col-md-6 col-sm-6 col-xs-12">
                                                @{
                                                    var listMetoda = new List<MetodaHpp>()
                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                        new MetodaHpp()
                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                            KODE = "1",
                                                                                                                                                                                                                                                                                            KET = "FIFO"
                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                        new MetodaHpp()
                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                            KODE = "2",
                                                                                                                                                                                                                                                                                            KET = "Rata-rata Perusahaan"
                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                        new MetodaHpp()
                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                            KODE = "3",
                                                                                                                                                                                                                                                                                            KET = "Rata-rata Gudang"
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                    };
                                                }
                                                @Html.HiddenFor(m => m.DataUsaha.METODA_NO)
                                                <select class="form-control" id="DataUsaha_Metoda" name="DataUsaha.Metoda" required="required">
                                                    <option value="default">Harap pilih</option>
                                                    @foreach (var metoda in listMetoda)
                                                    {
                                                        if (Model?.DataUsaha != null)
                                                        {
                                                            if (metoda.KODE == Model.DataUsaha.METODA_NO)
                                                            {
                                                                <option value="@metoda.KODE" selected>@metoda.KET</option>
                                                            }
                                                            else
                                                            {
                                                                <option value="@metoda.KODE">@metoda.KET</option>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <option value="@metoda.KODE">@metoda.KET</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.DataUsaha.ALAMAT_PT, "Alamat *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                            <div class="col-md-6 col-sm-6 col-xs-12">
                                                @(Model?.DataUsaha?.NAMA_PT != "PT ERAKOMP INFONUSA" ? Html.TextAreaFor(m => m.DataUsaha.ALAMAT_PT, new { @class = "form-control", required = "required" }) : Html.TextArea("DataUsaha_ALAMAT_PT", "", new { @class = "form-control", required = "required" }))
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.Label("Provinsi *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                            <div class="col-md-6 col-sm-6 col-xs-12">
                                                @Html.HiddenFor(m => m.DataUsahaTambahan.KODEPROV)
                                                <div id="KODEPROV" class="selectivity-input" tabindex="0" required="required"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.Label("Kota *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                            <div class="col-md-6 col-sm-6 col-xs-12">
                                                @Html.HiddenFor(m => m.DataUsahaTambahan.KODEKABKOT)
                                                <div id="KODEKABKOT" class="selectivity-input" tabindex="0" required="required"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.Label("Kode Pos *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                            <div class="col-md-6 col-sm-6 col-xs-12">
                                                @(Model?.DataUsaha?.NAMA_PT != "PT ERAKOMP INFONUSA" ? Html.TextBoxFor(m => m.DataUsahaTambahan.KODEPOS, new { @class = "form-control limited_number_textbox", type = "number", required = "required", maxlength = 5 })
                                                                                                            : Html.TextBoxFor(m => m.DataUsahaTambahan.KODEPOS, new { @class = "form-control limited_number_textbox", type = "number", required = "required", Value = "", maxlength = 5 }))
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.DataUsahaTambahan.PERSON, "Contact Person *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                            <div class="col-md-6 col-sm-6 col-xs-12">
                                                @(Model?.DataUsaha?.NAMA_PT != "PT ERAKOMP INFONUSA" ? Html.TextBoxFor(m => m.DataUsahaTambahan.PERSON, new { @class = "form-control", required = "required" })
                                                                                                            : Html.TextBoxFor(m => m.DataUsahaTambahan.PERSON, new { @class = "form-control", required = "required", Value = "" }))
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.DataUsahaTambahan.EMAIL, "Email CP *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                            <div class="col-md-6 col-sm-6 col-xs-12">
                                                @(Model?.DataUsaha?.NAMA_PT != "PT ERAKOMP INFONUSA" ? Html.TextBoxFor(m => m.DataUsahaTambahan.EMAIL, new { @class = "form-control", required = "required", type = "email" })
                                                                                                            : Html.TextBoxFor(m => m.DataUsahaTambahan.EMAIL, new { @class = "form-control", required = "required", Value = "", type = "email" }))
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.DataUsahaTambahan.TELEPON, "Telepon CP *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                            <div class="col-md-6 col-sm-6 col-xs-12">
                                                @(Model?.DataUsaha?.NAMA_PT != "PT ERAKOMP INFONUSA" ? Html.TextBoxFor(m => m.DataUsahaTambahan.TELEPON, new { @class = "form-control limited_number_textbox", type = "number", required = "required" })
                                                                                                      : Html.TextBoxFor(m => m.DataUsahaTambahan.TELEPON, new { @class = "form-control limited_number_textbox", type = "number", required = "required", Value = "" }))
                                            </div>
                                        </div>
                                        //add by nurul 11/3/2019
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.DataUsaha.GUDANG, "Default Gudang *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                            <div class="col-md-6 col-sm-6 col-xs-12">
                                                @*@(Model?.DataUsaha?.NAMA_PT != "PT ERAKOMP INFONUSA" ? Html.TextBoxFor(m => m.DataUsaha.GUDANG, new { @class = "form-control", required = "required" }) : Html.TextBoxFor(m => m.DataUsaha.GUDANG, new { @class = "form-control", required = "required", Value = "" }))*@
                                                @Html.HiddenFor(m => m.DataUsaha.GUDANG)
                                                @*<div id="gudang-select" style="display: none;">*@
                                                <div id="GUDANG" class="selectivity-input" tabindex="0" required="required"></div>
                                                @*</div>*@
                                            </div>
                                        </div>
                                        //end add by nurul 11/3/2019
                                        //remark by nurul 10/4/2019
                                        @*<div class="form-group">
                                                @Html.LabelFor(m => m.DataUsaha.JTRAN_RETUR, "Update Pesanan dan Stok Ke Marketplace", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @Html.HiddenFor(m => m.DataUsaha.JTRAN_RETUR)
                                                    <select class="form-control" id="DataUsaha_JtranRetur" name="DataUsaha.JtranRetur" required="required">
                                                        @if (Model?.DataUsaha != null)
                                                        {
                                                            if (Model.DataUsaha.JTRAN_RETUR == "1")
                                                            {
                                                                <option value="1" selected>Aktif</option>
                                                                <option value="0">Tidak Aktif</option>
                                                            }
                                                            else
                                                            {
                                                                <option value="1">Aktif</option>
                                                                <option value="0" selected>Tidak Aktif</option>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <option value="1">Aktif</option>
                                                            <option value="0" selected>Tidak Aktif</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>*@
                                        //end remark by nurul 10/4/2019
                                        @*--REMARK BY NURUL 24/8/2018--
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.DataUsaha.BCA_API_KEY, "BCA API KEY", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @(Model?.DataUsaha?.NAMA_PT != "PT ERAKOMP INFONUSA" ? Html.TextBoxFor(m => m.DataUsaha.BCA_API_KEY, new { @class = "form-control" }) : Html.TextBoxFor(m => m.DataUsaha.BCA_API_KEY, new { @class = "form-control", Value = "" }))
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.DataUsaha.BCA_API_SECRET, "BCA API SECRET", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @(Model?.DataUsaha?.NAMA_PT != "PT ERAKOMP INFONUSA" ? Html.TextBoxFor(m => m.DataUsaha.BCA_API_SECRET, new { @class = "form-control" }) : Html.TextBoxFor(m => m.DataUsaha.BCA_API_SECRET, new { @class = "form-control", Value = "" }))
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.DataUsaha.BCA_CLIENT_ID, "BCA CLIENT ID", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @(Model?.DataUsaha?.NAMA_PT != "PT ERAKOMP INFONUSA" ? Html.TextBoxFor(m => m.DataUsaha.BCA_CLIENT_ID, new { @class = "form-control" }) : Html.TextBoxFor(m => m.DataUsaha.BCA_CLIENT_ID, new { @class = "form-control", Value = "" }))
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.DataUsaha.BCA_CLIENT_SECRET, "BCA CLIENT SECRET", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @(Model?.DataUsaha?.NAMA_PT != "PT ERAKOMP INFONUSA" ? Html.TextBoxFor(m => m.DataUsaha.BCA_CLIENT_SECRET, new { @class = "form-control" }) : Html.TextBoxFor(m => m.DataUsaha.BCA_CLIENT_SECRET, new { @class = "form-control", Value = "" }))
                                                </div>
                                            </div>*@
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.DataUsahaTambahan.TYPE_LOGO, "Template Logo Toko", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                            <div class="col-md-6 col-sm-6 col-xs-12">
                                                @Html.HiddenFor(m => m.DataUsahaTambahan.TYPE_LOGO)
                                                <select class="form-control" id="Tambahan_TYPE_LOGO" placeholder="Harap Pilih" name="Tambahan_TYPE_LOGO" required="required">
                                                    <option value="1">Persegi</option>
                                                    <option value="2">Persegi Panjang</option>
                                                </select>
                                            </div>
                                        </div>
                                        //add by nurul 3/2/2022
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.DataUsahaTambahan.MULTILOKASI, "Multi Lokasi", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                            @Html.HiddenFor(m => m.DataUsahaTambahan.MULTILOKASI, new { data_cbx = $"cbx-MULTILOKASI", @class = "cbxMULTILOKASI" })
                                            <div class="col-md-6 col-sm-6 col-xs-12">
                                                @if ((Model.DataUsahaTambahan == null ? "" : Model.DataUsahaTambahan.MULTILOKASI) == "1")
                                                {
                                                    //memiliki multi lokasi
                                                    <label class="checkbox-container">
                                                        <input type="checkbox" id="cbxProfilMULTILOKASI" class="cbxMULTILOKASI" name="@($"cbx-Profil-MULTILOKASI")" checked />
                                                        <span class="checkmark cm-MULTILOKASI"></span>
                                                    </label>
                                                }
                                                else
                                                {
                                                    <label class="checkbox-container">
                                                        <input type="checkbox" id="cbxProfilMULTILOKASI" class="cbxMULTILOKASI" name="@($"cbx-Profil-MULTILOKASI")" />
                                                        <span class="checkmark cm-MULTILOKASI"></span>
                                                    </label>
                                                }
                                            </div>
                                        </div>
                                        //end add by nurul 3/2/2022
                                        <div class="form-group">
                                            @Html.Label("Logo Toko *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                            @*<div class="col-md-4 logo_perusahaan_section">
                                                    <button type="button" class="btn btn-danger btn-small btn_hapus_logo" id="btn_hapus_logo">Hapus</button>
                                                    <div class="box_upload" id="box_upload_logo">
                                                        <span class="box_upload_placeholder">300 x 300 <br /> (.JPG / .JPEG)</span>
                                                        <input type='file' id='logo_perusahaan' name="logo_perusahaan" accept=".jpg" />
                                                    </div>
                                                </div>*@
                                            <div class="col-md-4 foto_produk_section">
                                                <button type="button" class="btn btn-danger btn-small btn_hapus_foto_produk" id="btn_hapus_1">Hapus</button>
                                                <div class="box_upload" id="box_upload_1">
                                                    <span class="box_upload_placeholder">Tambah Gambar</span>
                                                    <input type='file' id='foto_produk_1' name="foto_produk_1" @*accept=".jpg"*@ />
                                                    <input type="hidden" id="hidden_url_gambar_1" value="@(Model.DataUsahaTambahan?.LINK_GAMBAR)" />
                                                </div>
                                            </div>
                                        </div>

                                        <input type="button" class="btn btn-primary pull-right" value="Simpan" id="simpan_btn" onclick="simpanDataUsaha(this);" />
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script src="~/Content/build/js/selectivity-jquery.min.js" type="text/javascript"></script>
    <script src="~/Content/selectize.js" type="text/javascript"></script>
    <script type="text/javascript">
        @{
            var tempType = (Model.DataUsahaTambahan.TYPE_LOGO == null || Model.DataUsahaTambahan.TYPE_LOGO == "" || Model.DataUsahaTambahan.TYPE_LOGO == "0" ? "1" : Model.DataUsahaTambahan.TYPE_LOGO);
        }
        var tempType = @Html.Raw(Json.Encode(tempType));
        $(document).on('ready',
            function () {
                Initialize();

                $('#close-editor').on('click', function () {
                    location.href = "Bantuan";
                });

                getFotoProduk();
            });

        function Initialize() {
            getGudang();
            //$('#gudang-select').show();
            getKabKot();
            resetKabKot();
            getDataPengusaha();

            $('#DataUsaha_Metoda').change(function() {
                $('#DataUsaha_METODA_NO').val($(this).val());
            });

            $('#DataUsaha_JtranRetur').change(function () {
                $('#DataUsaha_JTRAN_RETUR').val($(this).val());
            });

            $("input[type=file]").on("click",
                function (e) {
                    e.stopPropagation();
                });

            $('#logo_perusahaan').hide();
            $('#btn_hapus_logo').hide();

            $('#logo_perusahaan').change(function () {
                var file = this.files[0];
                var fileType = file["type"];
                var validImage = ["image/jpeg"];
                //if ($.inArray(fileType, validImage) < 0) {
                //    alert('Hanya boleh file berformat .jpg!');
                //    return;
                //}
                var reader = new FileReader();
                reader.onloadend = function () {
                    $('#box_upload_logo').css('background-image', 'url("' + reader.result + '")')
                        .css('background-size', 'cover');
                    $('#box_upload_logo span').hide();
                    $('#btn_hapus_logo').show();
                }
                if (file) {
                    reader.readAsDataURL(file);
                }
            });

            $('#box_upload_logo').on('click', function () {
                $('#logo_perusahaan').click();
            });

            $('#foto_produk_1').hide();
            $('#btn_hapus_1').hide();

            @*$('#btn_hapus_logo').click(function () {
                var $link = '@Html.Raw(Url.Action("DeleteLogoPerusahaan", "Manage", new { namaPT = "replaceNama", uname = "replaceUsername" }))';
                $link = $link.replace("replaceNama", encodeURIComponent($('#DataUsaha_NAMA_PT').val()));
                $link = $link.replace("replaceUsername", encodeURIComponent($('#DataUsaha_USERNAME').val()));

                $.ajax({
                    url: $link,
                    type: 'GET',
                    success: function () {
                        $('#logo_perusahaan').val(null);
                        $('#box_upload_logo').css('background-image', '');
                        $('#box_upload_logo span').show();
                        $('#btn_hapus_logo').hide();
                    },
                    error: function()
                    {
                    }
                });

                return;
            });*@

            //var $linkLogo = '/Content/Logo_Perusahaan/LogoUsaha-' + encodeURIComponent($('#DataUsaha_USERNAME').val() + '-' + $('#DataUsaha_NAMA_PT').val()) + '.jpg';

            //$.ajax({
            //    url: $linkLogo,
            //    type: 'GET',
            //    success: function () {
            //        $('#box_upload_logo').css({
            //            'background-image': 'url("' + $linkLogo + '")',
            //            'background-size': 'cover'
            //        });
            //        $('#box_upload_logo span').hide();
            //        $('#btn_hapus_logo').show();
            //    },
            //    error: function () {
            //    }
            //});

            $('#btn_hapus_1').off('click').on('click', function () {
                var $link = '@Html.Raw(Url.Action("DeleteLogoPerusahaan", "Manage", new { namaPT = "replaceNama", uname = "replaceUsername" }))';
                $link = $link.replace("replaceNama", encodeURIComponent($('#DataUsaha_NAMA_PT').val()));
                $link = $link.replace("replaceUsername", encodeURIComponent($('#DataUsaha_USERNAME').val()));

                $.ajax({
                    url: $link,
                    type: 'GET',
                    success: function () {
                        var str = $('#hidden_url_gambar_1').val();
                        var n = str.lastIndexOf('/');
                        var keyNameFile = str.substring(n + 1);
                        image_size_1 = 0;
                        deleteObjectByFileName(keyNameFile);

                        $('#foto_produk_1').val(null);
                        $('#box_upload_1').css('background-image', '');
                        $('#box_upload_1 span').show();
                        $('#btn_hapus_1').hide();
                    },
                    error: function () {
                    }
                });

                return;
            });

            var validImage = ["image/jpeg"];

            $('#foto_produk_1').off('change').on('change', function () {
                var file = this.files[0];
                var fileType = file["type"];
                //if ($.inArray(fileType, validImage) < 0) {
                //    alert('Hanya boleh file berformat .jpg!');
                //    return false;
                //}
                image_size_1 = file["size"];
                //var fileSize = file["size"];
                var fileSize = image_size_1;
                if (fileSize > 4000000) {
                    alert('Maximal size 4MB');
                    $('#btn_hapus_1').click();
                    return false;
                }
                var reader = new FileReader();
                reader.onloadend = function () {
                    $('#box_upload_1').css('background-image', 'url("' + reader.result + '")')
                        .css('background-size', 'cover');
                    $('#box_upload_1 span').hide();
                    $('#btn_hapus_1').show();
                }
                if (file) {
                    reader.readAsDataURL(file);
                }
            });

            $('#box_upload_1').off('click').on('click', function () {
            });

            $('#box_upload_1').off('click').on('click', function () {
                $('#foto_produk_1').click();
            });

            var image_size_1 = 0;

            $('#Tambahan_TYPE_LOGO').change(function () {
                $("#DataUsahaTambahan_TYPE_LOGO").val($('#Tambahan_TYPE_LOGO').val())
            });
            $("#Tambahan_TYPE_LOGO").change(
                function () {
                    if ($("#Tambahan_TYPE_LOGO").val() == "1") {
                        $("#DataUsahaTambahan_TYPE_LOGO").val('1');
                    } else if ($("#Tambahan_TYPE_LOGO").val() == "2") {
                        $("#DataUsahaTambahan_TYPE_LOGO").val('2');
                    } else {
                        $("#DataUsahaTambahan_TYPE_LOGO").val('0');
                    }
                });
            $("#Tambahan_TYPE_LOGO").change();
            $('#Tambahan_TYPE_LOGO').val(tempType);

            $('.cbxMULTILOKASI').each(function () {
                var $this = $(this);

                $this.click(function () {
                    var $cbxTarget = $('.cbxMULTILOKASI[data-cbx="cbx-MULTILOKASI"]');
                    if ($cbxTarget.val() == "1" || $("#cbxProfilMULTILOKASI").is(":checked") == true) {
                        if (confirm("Dengan mengaktifkan fitur MultiLokasi, maka seluruh update stok akan menyesuaikan gudang yang dimapping. Apakah Anda yakin akan mengaktifkan fitur MultiLokasi")) {
                            $('#DataUsahaTambahan_MULTILOKASI').val(1);
                            checkValidasiMultiLokasi();
                        } else {
                            $('#cbxProfilMULTILOKASI').attr('checked', false);
                            $('#DataUsahaTambahan_MULTILOKASI').val(0);
                        }
                        
                    } else {
                        $('#DataUsahaTambahan_MULTILOKASI').val(0);
                    }
                });
            });
        }

        function checkValidasiMultiLokasi() {
            var link = '@Url.Action("validasiMultiLokasiAktif", "Manage", new { userId = "replaceUserId" })';
            link = link.replace("replaceUserId", encodeURIComponent('@userId'));

            $.ajax({
                type: "GET",
                url: link,
                success: function (response) {
                    if (response.mo_error != null) {
                        alert(response.mo_error);
                        $('#cbxProfilMULTILOKASI').attr('checked', false);
                        $('#DataUsahaTambahan_MULTILOKASI').val(0);
                    }
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        }

        function getFotoProduk() {
            if ($('#hidden_url_gambar_1').val() != "") {
                $('#box_upload_1').css({
                    'background-image': 'url("' + $('#hidden_url_gambar_1').val() + '")',
                    'background-size': 'cover'
                });
                $('#box_upload_1 span').hide();
                $('#btn_hapus_1').show();
            }
        }

        function simpanDataUsaha(btnClicked) {
            if (!validateForm()) return false;

            var $form = $(btnClicked).parents('form');
            var $formData = new FormData($('form')[0]);

            $.ajax({
                type: "POST",
                url: $form.attr('action'),
                data: $formData,
                processData: false,
                contentType: false,
                beforeSend: function () {
                    $('#loading_spinner').show();
                },
                success: function (response) {
                    if (response.Errors == null) {
                        if (response.Errors == null) {
                            alert('Data perusahaan berhasil disimpan!');
                            //window.location = '@Url.Action("Bantuan")';
                            window.location.reload();
                        } else {
                            console.log(response.Errors);
                            alert('Ada data yang tidak valid!');
                        }

                        $('#loading_spinner').hide();
                    } else {
                        console.log(response.Errors);
                        alert('Ada data yang tidak valid!');
                        $('#loading_spinner').hide();
                    }
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });

            return false;
        }

        function getKabKot() {
            $.ajax({
                type: "GET",
                /**/
                url: '@Url.Action("GetProvinsi", "Manage")',
                /**/
                contentType: 'application/json',
                cache: false,
                success: function (data) {
                    var provList = [];

                    $.each(data,
                        function (i, item) {
                            provList[i] = {
                                id: item.KodeProv,
                                text: item.NamaProv
                            };
                        });

                    $('#KODEPROV').selectivity({
                        allowClear: true,
                        items: provList,
                        placeholder: 'Harap pilih'
                    });

                    $('#KODEPROV').change(function () {
                        var $val = $(this).selectivity('value');

                        if ($val === null) {
                            resetKabKot();
                        } else {
                            loadDataKabupatenKota($val);
                        }

                        $('#DataUsahaTambahan_KODEPROV').val($val);
                    });

                    $('#KODEPROV').selectivity('value', $('#DataUsahaTambahan_KODEPROV').val());
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });
        }

        function resetKabKot() {
            $('#KODEKABKOT').selectivity({
                allowClear: true,
                items: [],
                placeholder: 'Harap pilih'
            });
            $('#KODEKABKOT').selectivity('value', 'Harap pilih');
        }

        function getDataPengusaha() {
            var link = '@Url.Action("GetDataPengusaha", "Manage", new { userId = "replaceUserId" })';
            link = link.replace("replaceUserId", encodeURIComponent('@userId'));

            $.ajax({
                type: "GET",
                url: link,
                success: function (response) {
                    $('#DataUsahaTambahan_EMAIL').val(response.Email);
                    $('#DataUsahaTambahan_TELEPON').val(response.Telepon);
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        }

        function loadDataKabupatenKota(kdProv) {
            var link = '@Url.Action("GetKabKot", "Manage", new { kodeProv = "replaceId" })';
            link = link.replace("replaceId", encodeURIComponent(kdProv));

            $.ajax({
                type: "GET",
                /**/
                url: link,
                /**/
                contentType: 'application/json',
                cache: false,
                success: function (data) {
                    var kabkotList = [];

                    $.each(data,
                        function (i, item) {
                            kabkotList[i] = {
                                id: item.KodeKabKot,
                                text: item.NamaKabKot
                            };
                        });

                    $('#KODEKABKOT').selectivity({
                        allowClear: true,
                        items: kabkotList,
                        placeholder: 'Harap pilih'
                    }).change(function () {
                        var $val = $(this).selectivity('value');
                        $('#DataUsahaTambahan_KODEKABKOT').val($val);
                    });

                    $('#KODEKABKOT').selectivity('value', $('#DataUsahaTambahan_KODEKABKOT').val());
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });
        }

        //ADD BY NURUL 20/7/2020
        function getGudang() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetGudang", "Manage")',
                contentType: 'application/json',
                cache: false,
                success: function (data) {
                    var listGudang = [];

                    $.each(data,
                        function (i, item) {
                            listGudang[i] = {
                                id: item.Kode_Gudang,
                                text: item.Nama_Gudang
                            };
                        });

                    //var gudangSelect = $('#GUDANG').selectize({
                    //    valueField: 'id',
                    //    searchField: 'text',
                    //    options: listGudang,
                    //    onChange: function (value) {
                    //        $('#DataUsaha_GUDANG').val(value);
                    //    }
                    //});

                    //gudangSelect[0].selectize.setValue($('#DataUsaha_GUDANG').val());

                    $('#GUDANG').selectivity({
                        allowClear: true,
                        items: listGudang,
                        placeholder: 'Harap pilih'
                    }).change(function () {
                        var $val = $(this).selectivity('value');
                        $('#DataUsaha_GUDANG').val($val);
                    });

                    $('#GUDANG').selectivity('value', $('#DataUsaha_GUDANG').val());
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });
        }

        //END ADD BY NURUL 20/7/2020
    </script>
    <script>
        var mimes = {
            'jpeg': 'data:image/jpeg;base64,'
        };

        AWS.config.update({
            signatureVersion: 'v4',
            region: 'ap-southeast-1',
            accessKeyId: 'AKIAIUKY7MJGRJULBXZQ',
            secretAccessKey: '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'
        });

        var bucket = new AWS.S3({ params: { Bucket: 'masteronlinebucket/uploaded-image' } });

        function encode(data) {
            var str = data.reduce(function (a, b) { return a + String.fromCharCode(b) }, '');
            return btoa(str).replace(/.{76}(?=.)/g, '$&\n');
        }

        function getUrlByFileName(fileName, mimeType) {
            return new Promise(
                function (resolve, reject) {
                    bucket.getObject({ Key: fileName }, function (err, file) {
                        if (file == null) {
                            return;
                        }

                        var result = mimeType + encode(file.Body);
                        resolve(result);
                    });
                }
            );
        }

        function deleteObjectByFileName(fileName) {
            return new Promise(
                function (resolve, reject) {
                    bucket.deleteObject({ Key: fileName }, function (err, data) {
                        if (err) console.log(err, err.stack); // an error occurred
                        else console.log(data);// successful response
                    });
                }
            );
        }
        function getKeyByValue(object, value) {
            return Object.keys(object).find(key => object[key] === value);
        }
    </script>
}

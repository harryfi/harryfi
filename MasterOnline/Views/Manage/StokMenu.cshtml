@using System.Globalization
@using MasterOnline.ViewModels
@model StokViewModel
@{
    ViewBag.Title = "Saldo Awal Stok";
    Layout = "~/Views/Shared/_LayoutManage.cshtml";

    ErasoftContext erasoftContext = null;
    var context = new MoDbContext();

    var dataSession = Session["SessionInfo"] as AccountUserViewModel;

    if (dataSession?.Account != null)
    {
        erasoftContext = new ErasoftContext(dataSession.Account.UserId);
    }
    else
    {
        var accFromUser = context.Account.Single(a => a.AccountId == dataSession.User.AccountId);
        erasoftContext = new ErasoftContext(accFromUser.UserId);
    }
}

@section styles
{
    <link href="~/Content/build/css/selectivity-jquery.min.css" rel="stylesheet" />
    <link href="~/Content/build/css/bootstrap-datepicker.min.css" rel="stylesheet" />
    <link href="~/Content/selectize.css" rel="stylesheet" />

    <style>
        .input-group {
            margin-bottom: 0;
        }

        .btn-success[disabled]:hover {
            background: #6ad6bf;
            border-color: #6ad6bf;
        }

        table#table_tambah_stok thead tr {
            background-color: #c7f1f5;
        }

        .qty-input {
            width: 50px;
        }

        .harga-input {
            width: 100px;
        }

        .disc-input {
            width: 50px;
        }

        .ndisc-input {
            width: 100px;
        }

        #BRG {
            width: 150px !important;
        }

        #GUDANG,
        #GUDANG .selectivity-single-select-input {
            width: 100px !important;
        }

        #stok-section > div {
            background-color: #fff;
            padding: 20px;
        }
    </style>
}

<div class="row" id="stok-section">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="row stok_table_section">
            <div class="col-lg-4 col-sm-6">
                <div class="input-group">
                    <input id="search_stok" type="text" class="form-control" placeholder="Pencarian">
                    <span class="input-group-btn">
                        <button type="button" class="btn btn-primary">
                            <i class="fa fa-search"></i>
                        </button>
                    </span>
                </div>
            </div>
            <div class="col-lg-8 col-sm-6">
                <div class="pull-right">
                    <button type="button" class=" btn btn-default" data-style="expand-right">
                        <span>Refresh</span>
                    </button>
                    <button class="btn btn-primary btn_tambah_data" id="tambah_stok">Tambah Baru</button>
                </div>
            </div>
        </div>
        <div class="row stok_table_section" style="margin-top: 5px;">
            <div class="col-sm-12" id="table-stok-partial">
                @Html.Partial("TableStokPartial")
            </div>
        </div>
        <div class="row stok_editor_section" style="display: none;">
            <div class="col-lg-12">
                <div class="page-editor">
                    <h2 class="editor-title">Stok</h2>
                    <span class="title-accent"></span>
                    <button id="close-editor" type="button" class="pull-right page-close">
                        <span class="close-btn thick"></span>
                    </button>
                    @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
                    {
                        foreach (var modelError in ViewData.ModelState.SelectMany(x => x.Value.Errors))
                        {
                            <div class="alert alert-danger">
                                <span class="message-error">@modelError.ErrorMessage</span>
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                        }
                    }
                    @using (Html.BeginForm("SaveStok", "Manage", FormMethod.Post, new { enctype = "multipart/form-data", id = "form-stok" }))
                    {
                        <div id="form-partial">
                            @Html.Partial("BarangStokPartial")
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="konfHapusStok" tabindex="-1" role="dialog" aria-labelledby="konfirmasiHapusLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="konfirmasiHapusLabel">Konfirmasi</h4>
            </div>
            <div class="modal-body">
                <div class="row text-center">
                    <h4>Apakah Anda yakin ingin menghapus stok ini?</h4>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Tidak</button>
                <button type="button" class="btn btn-success" onclick="deleteStok();">Ya</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="konfHapusBarang" tabindex="-1" role="dialog" aria-labelledby="konfirmasiHapusLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="konfirmasiHapusLabel">Konfirmasi</h4>
            </div>
            <div class="modal-body">
                <div class="row text-center">
                    <h4>Apakah Anda yakin ingin menghapus barang ini?</h4>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Tidak</button>
                <button type="button" class="btn btn-success" onclick="deleteBarang();">Ya</button>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script src="~/Content/build/js/selectivity-jquery.min.js" type="text/javascript"></script>
    <script src="~/Content/build/js/bootstrap-datepicker.min.js" type="text/javascript"></script>
    <script src="~/Content/vendors/moment/min/moment.min.js" type="text/javascript"></script>
    <script src="~/Content/selectize.js" type="text/javascript"></script>
    <script src='@Url.Content("~/Scripts/jquery.validate.js")' type='text/javascript'></script>
    <script src='@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")' type='text/javascript'></script>

    <script type="text/javascript">
        $(document).ready(function () {
            Initialize();
            var tableSiapProses = $('#datatable_siapproses').DataTable({
                columnDefs: [{
                    orderable: false,
                    className: 'select-checkbox',
                    targets: 0
                }],
                select: {
                    style: 'os',
                    selector: 'td:first-child'
                },
            });

            $('#search_siapproses').keyup(function () {
                tableSiapProses.search($(this).val()).draw();
            });
        });

        function Initialize() {
            var table = $('#datatable').DataTable();
            var tableNunggu = $('#datatable_menipis').DataTable();
            var tableSedangProses = $('#datatable_kehabisan').DataTable();
            var tableSiapKirim = $('#datatable_siapkirim').DataTable();
            var tableSudahKirim = $('#datatable_tidaklaku').DataTable();
            var tableSelesai = $('#datatable_promosi').DataTable();

            $('#search_stok').keyup(function () {
                table.search($(this).val()).draw();
            });

            $('#search_promosi').keyup(function () {
                tableSelesai.search($(this).val()).draw();
            });

            $('#search_menipis').keyup(function () {
                tableNunggu.search($(this).val()).draw();
            });

            $('#search_kehabisan').keyup(function () {
                tableSedangProses.search($(this).val()).draw();
            });

            $('#search_siapkirim').keyup(function () {
                tableSiapKirim.search($(this).val()).draw();
            });

            $('#search_tidaklaku').keyup(function () {
                tableSudahKirim.search($(this).val()).draw();
            });

            $('#tambah_stok').on('click', function () {
                refresh();
                $('.stok_table_section').hide();
                $('.stok_editor_section').show();
            });

            $('#close-editor').on('click', function () {
                $('input, select, .btn-danger').each(function () {
                    $(this).removeAttr('disabled');
                });

                $('.stok_table_section').show();
                $('.stok_editor_section').hide();
                //refresh();
                refreshTableStok();
            });

            if ($('.message-error').text() !== '') {
                //$('#tambah_stok').click();
                $('.stok_table_section').hide();
                $('.stok_editor_section').show();
            }

            $('#table_tambah_stok > tbody > tr > td.editable-kode').prop('contentEditable', true);

            getDataBarang();
            getGudang();
            var $flagPerubahan = 0;

            $('#Stok_Tgl').datepicker({
                format: 'dd/mm/yyyy',
                language: 'id'
            }).datepicker('setDate', '0').change(function () {
                if ($flagPerubahan == 1) {
                    $('#btn-simpan-perubahan-row').show();
                }

                $flagPerubahan++;
            });

            $("input.num-only").on('keydown',
                function (e) {
                    // Allow: backspace, delete, tab, escape, enter and .
                    if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                        // Allow: Ctrl+A, Command+A
                        (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                        // Allow: home, end, left, right, down, up
                        (e.keyCode >= 35 && e.keyCode <= 40)) {
                        // let it happen, don't do anything
                        return;
                    }
                    // Ensure that it is a number and stop the keypress
                    if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                        e.preventDefault();
                    }
                });

            $('#btn-simpan-perubahan').click(function () {
                var $this = $(this);
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UpdateStok", "Manage")',
                    data: JSON.stringify({
                        NoBuktiStok: "@(Model?.Stok?.Nobuk)",
                        TglInput: $('#Stok_Tgl').val()
                    }),
                    contentType: 'application/json; charset=UTF-8',
                    cache: false,
                    success: function () {
                        alert('Data stok berhasil di-update');
                        $this.hide();
                    },
                    error: function (xhr) {
                        console.log(xhr);
                    }
                });
            });
        }

        function modeEditTd() {
            $('.qty-barang').addClass('editable');
            $('.harga-barang').addClass('editable');
            $('#table_tambah_stok > tbody > tr > td.editable').prop('contentEditable', true);
            $('#table_tambah_stok > tbody > tr > td.editable').on('click', function () {
                var $this = $(this);
                var $class = $this.attr('class');
                var $inputClass = '';
                var $trId = $this.parent().attr('data-stok-id');
                var $harga = convertToAngka($this.text());

                if ($class == 'qty-barang editable') {
                    $inputClass = 'qty-input';
                } else if ($class == 'harga-barang editable') {
                    $inputClass = 'harga-input';
                }

                var $input = $('<input>', {
                    'class': $inputClass,
                    value: $this.val(),
                    type: 'number',
                    blur: function () {
                        if (this.value == '') {
                            if ($class === 'qty-barang editable') {
                                $this.html(0 + '<input data-val="true" data-val-number="The field Qty must be a number." data-val-required="The Qty field is required." id="BarangStok_Qty" name="BarangStok.Qty" type="hidden" value="">');
                            } else if ($class === 'harga-barang editable') {
                                $this.html(convertToRupiah(0) + '<input data-val="true" data-val-number="The field Harsat must be a number." data-val-required="The Harsat field is required." id="BarangStok_Harsat" name="BarangStok.Harsat" type="hidden" value="">');
                            }
                            refreshNettoBarang($trId);
                        } else {
                            if ($class === 'qty-barang editable') {
                                $this.html(this.value + '<input data-val="true" data-val-number="The field Qty must be a number." data-val-required="The Qty field is required." id="BarangStok_Qty" name="BarangStok.Qty" type="hidden" value="">');
                            } else if ($class == 'harga-barang editable') {
                                $this.html(convertToRupiah(this.value) + '<input data-val="true" data-val-number="The field Harsat must be a number." data-val-required="The Harsat field is required." id="BarangStok_Harsat" name="BarangStok.Harsat" type="hidden" value="">');
                                $('#BarangStok_Harsat').val(this.value);
                            }
                            refreshNettoBarang($trId);
                        }
                    },
                    focus: function () {
                        this.value = $harga;
                    },
                    keyup: function (e) {
                        if (e.which === 13) $input.blur();
                    },
                    keypress: function (e) {
                        if (e.which != 8 && e.which != 0 && e.which < 48 || e.which > 57) e.preventDefault();
                        if ($(this).attr('class') == 'qty-input') {
                            if ($(this).val() > 99) {
                                $(this).val(99);
                            }
                        }
                    }
                }).appendTo($this.empty()).focus();
            });
        }

        function getDataBarang() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetDataBarang", "Manage")',
                contentType: 'application/json',
                cache: false,
                success: function (data) {
                    var listKodeBarang = [];

                    $.each(data,
                        function (i, item) {
                            listKodeBarang[i] = {
                                id: item.BRG,
                                text: item.BRG + ' (' + item.NAMA + ')'
                            };
                        });

                    $('#BRG').selectivity({
                        allowClear: true,
                        items: listKodeBarang,
                        placeholder: 'Harap pilih'
                    }).change(function () {
                        var val = $(this).selectivity('value');
                        var $trId = $(this).closest('tr').attr('data-stok-id');
                        var $trElement = 'tr[data-stok-id="' + $trId + '"]';

                        if (val != null) {
                            $.each(data,
                                function (i, item) {
                                    if (item.BRG == val) {
                                        if (item.NAMA2 != null) {
                                            $($trElement + ' .nama-barang').text(item.NAMA + " " + item.NAMA2);
                                        } else {
                                            $($trElement + ' .nama-barang').text(item.NAMA + " ");
                                        }
                                        $($trElement + ' .stn-barang').html(item.STN2 + '<input data-val="true" data-val-length="The field Satuan must be a string with a maximum length of 10." data-val-length-max="10" id="BarangStok_Satuan" name="BarangStok.Satuan" type="hidden" value="">');
                                        $($trElement + ' .harga-barang').html(convertToRupiah(item.HJUAL) + '<input data-val="true" data-val-number="The field Harsat must be a number." data-val-required="The Harsat field is required." id="BarangStok_Harsat" name="BarangStok.Harsat" type="hidden" value="">');
                                        return;
                                    }
                                });

                            $($trElement + ' .btn-primary').removeAttr('disabled');
                            $('#BarangStok_Kobar').val(val);
                            $('#BarangStok_Satuan').val('2'); // Satuan Kecil
                            $('#BarangStok_Harsat').val(convertToAngka($($trElement + ' .harga-barang').text()));
                            $('#gudang-select').show();
                            $('#gudang-kode').hide();
                            offTab();
                            modeEditTd();
                        } else {
                            $($trElement + ' .nama-barang').text('-');
                            $($trElement + ' .stn-barang').html('-' + '<input data-val="true" data-val-length="The field Satuan must be a string with a maximum length of 10." data-val-length-max="10" id="BarangStok_Satuan" name="BarangStok.Satuan" type="hidden" value="">');
                            $($trElement + ' .harga-barang').html('0,00' + '<input data-val="true" data-val-number="The field Harsat must be a number." data-val-required="The Harsat field is required." id="BarangStok_Harsat" name="BarangStok.Harsat" type="hidden" value="">');
                            //change by calvin 5 juni 2018
                            //$($trElement + ' .gd-barang').html('<span id="gudang-kode">-</span><div id="gudang-select" style="display: none;"><div id="GUDANG" class="selectivity-input" tabindex="0"></div></div>' +
                            //    '<input data-val="true" data-val-number="The field Ke_Gd must be a number." data-val-required="The Ke_Gd field is required." id="BarangStok_Ke_Gd" name="BarangStok.Ke_Gd" type="hidden" value="">');
                            var $cariSelect = $($trElement + ' #GUDANG').selectize();
                            var setselectedindex_selectize = $cariSelect[0].selectize;
                            setselectedindex_selectize.setValue('');
                            $($trElement + ' #gudang-kode').html('-');
                            //end change by calvin 5 juni 2018

                            $($trElement + ' .qty-barang').html('0' + '<input data-val="true" data-val-number="The field Qty must be a number." data-val-required="The Qty field is required." id="BarangStok_Qty" name="BarangStok.Qty" type="hidden" value="">');
                            $($trElement + ' .netto-barang').html('0,00' + '<input data-val="true" data-val-number="The field Harga must be a number." data-val-required="The Harga field is required." id="BarangStok_Harga" name="BarangStok.Harga" type="hidden" value="">');
                            $($trElement + ' .btn-primary').attr('disabled', 'disabled');
                            getGudang();
                            $('#gudang-select').hide();
                            $('#gudang-kode').show();
                            onTab();
                            modeEditOff();
                        }

                        refreshNettoBarang($trId);
                    });
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });
        }

        function offTab() {
            $(document).keydown(function (objEvent) {
                if (objEvent.keyCode == 9) {
                    objEvent.preventDefault();
                }
            });
        }

        function onTab() {
            $(document).keydown(function (objEvent) {
                if (objEvent.keyCode == 9) { }
            });
        }

        function refreshNettoBarang($trId) {
            var $trElement = 'tr[data-stok-id="' + $trId + '"]';
            var $hargaBarang = convertToAngka($($trElement + ' .harga-barang').text());
            var $total = ($($trElement + ' .qty-barang').text() * $hargaBarang);

            $($trElement + ' .netto-barang').html(convertToRupiah($total) + '<input data-val="true" data-val-number="The field Harga must be a number." data-val-required="The Harga field is required." id="BarangStok_Harga" name="BarangStok.Harga" type="hidden" value="">');

            $('#BarangStok_Qty').val($($trElement + ' .qty-barang').text());
            $('#BarangStok_Harga').val(convertToAngka($($trElement + ' .netto-barang').text()));
        }

        function modeEditOff() {
            $('#table_tambah_stok > tbody > tr > td.editable').prop('contentEditable', false);
            $('#table_tambah_stok > tbody > tr > td.editable').prop('onclick', null).off('click');
            $('.qty-barang').removeClass('editable');
            $('.harga-barang').removeClass('editable');
        }

        function convertToRupiah(angka) {
            var rupiah = '';
            var angkarev = angka.toString().split('').reverse().join('');
            for (var i = 0; i < angkarev.length; i++) if (i % 3 === 0) rupiah += angkarev.substr(i, 3) + '.';
            return rupiah.split('', rupiah.length - 1).reverse().join('') + ',00';
        }

        function convertToAngka(rupiah) {
            return parseInt(rupiah.replace(/,.*|[^0-9]/g, ''), 10);
        }

        var $idStok = "";

        function undeleteable() {
            alert('Transaksi Sudah Posting! \nTidak dapat dihapus!');
        }
        function lihatStok(idStok) {
            var link = '@Url.Action("EditStok", "Manage", new { stokId = "replaceId" })';
            link = link.replace("replaceId", idStok);

            $.ajax({
                type: "GET",
                url: link,
                success: function (response) {
                    $('#form-partial').html(response);
                    Initialize();
                    //$('#tambah_stok').click();
                    $('.stok_table_section').hide();
                    $('.stok_editor_section').show();

                    $('input, select, .btn-danger').each(function () {
                        $(this).attr('disabled', 'disabled');
                    });
                    $('tr[data-stok-id="0"]').remove();

                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        }

        function editStok(idStok) {
            var link = '@Url.Action("EditStok", "Manage", new { stokId = "replaceId" })';
            link = link.replace("replaceId", idStok);

            $.ajax({
                type: "GET",
                url: link,
                success: function (response) {
                    $('#form-partial').html(response);
                    Initialize();
                    //$('#tambah_stok').click();
                    $('.stok_table_section').hide();
                    $('.stok_editor_section').show();
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        }

        function refreshTableStok() {
            var link = '@Url.Action("RefreshTableStok", "Manage")';

            $.ajax({
                type: "GET",
                url: link,
                success: function (response) {
                    $('#table-stok-partial').html(response);
                    var table = $('#datatable').DataTable();
                    $('#search_stok').keyup(function () {
                        table.search($(this).val()).draw();
                    });
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        }

        function refresh() {
            var link = '@Url.Action("RefreshStokForm", "Manage")';

            $.ajax({
                type: "GET",
                url: link,
                beforeSend: function () {
                    $('#loading_spinner').show();
                },
                success: function (response) {
                    $('#form-partial').html(response);
                    Initialize();
                    $('#loading_spinner').hide();
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        }

        function pass(idStok) {
            this.$idStok = idStok;
        }

        function deleteStok() {
            var link = '@Url.Action("DeleteStok", "Manage", new { stokId = "replaceId" })';
            link = link.replace("replaceId", this.$idStok);

            $.ajax({
                type: "GET",
                url: link,
                success: function (response) {
                    if (response.Errors == null) {
                        $('#table-stok-partial').html(response);
                        Initialize();
                        $('#konfHapusStok').modal('hide');
                    } else {
                        alert(response.Errors[0]);
                    }
                    $('#konfHapusStok').modal('hide');
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        }

        var $brg = '';

        function passBarangInDb($brg) {
            this.$brg = $brg;
        }

        function deleteBarang() {
            var link = '@Url.Action("DeleteBarangStok", "Manage", new { noUrut = "replaceBrgId" })';
            link = link.replace("replaceBrgId", this.$brg);

            $.ajax({
                type: "GET",
                url: link,
                contentType: 'application/json',
                cache: false,
                success: function (response) {
                    if (response.Errors == null) {
                        refreshNettoBarang();
                        $('#form-partial').html(response);
                        getDataBarang();
                        getGudang();
                    } else {
                        alert(response.Errors[0]);
                    }
                    $('#konfHapusBarang').modal('hide');
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });
        }

        function getGudang() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetGudang", "Manage")',
                contentType: 'application/json',
                cache: false,
                success: function (data) {
                    var listGudang = [];

                    $.each(data,
                        function (i, item) {
                            listGudang[i] = {
                                id: item.Kode_Gudang,
                                text: item.Nama_Gudang
                            };
                        });

                    var gudangSelect = $('#GUDANG').selectize({
                        valueField: 'id',
                        searchField: 'text',
                        options: listGudang,
                        onChange: function (value) {
                            $('#BarangStok_Ke_Gd').val(value);

                            if (value != null) {
                                $('#gudang-kode').text(value);
                            } else {
                                $('#gudang-kode').text('-');
                            }
                        }
                    });

                    gudangSelect[0].selectize.setValue($('#BarangStok_Ke_Gd').val());
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });
        }

        function simpanbrg($id) {
            if (!validateForm()) return false;

            if ($id == 'brg-0') {
                if ($('#Stok_Tgl').val() != null) {
                    var tgl = $('#Stok_Tgl').val();

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("SaveStok", "Manage")',
                        data: $('#form-stok').serialize(),
                        beforeSend: function () {
                            $('#loading_spinner').show();
                        },
                        success: function (response) {
                            if (response.Errors == null) {
                                $('#form-partial').html(response);
                                getDataBarang();
                                getGudang();
                                $('#loading_spinner').hide();
                            } else {
                                alert('Ada data yang tidak valid!');
                                console.log(response.Errors);
                                $('#loading_spinner').hide();
                            }
                        },
                        error: function (xhr) {
                            console.log(xhr);
                        }
                    });
                } else {
                    alert('Silakan isi semua field terlebih dahulu!');
                }
            }
        }
    </script>

    <script>
        //Disable Enter Key Submit Form
        function stopRKey(evt) {
            var evt = (evt) ? evt : ((event) ? event : null);
            var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);
            if ((evt.keyCode === 13) && (node.type === "text")) { return false; }
        }
        document.onkeypress = stopRKey;
    </script>
}
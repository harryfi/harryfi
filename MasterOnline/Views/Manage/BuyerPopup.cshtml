@using MasterOnline.ViewModels
@model BuyerViewModel
@{
    ViewBag.Title = "Pembeli";
    Layout = "~/Views/Shared/_LayoutManage.cshtml";
    var dataSession = Session["SessionInfo"] as AccountUserViewModel;
    var username = "";
    if (dataSession?.User != null)
    {
        var context = new MoDbContext();
        var accId = context.User.Single(u => u.Username == dataSession.User.Username).AccountId;
        username = context.Account.Single(a => a.AccountId == accId).Username;
        context.Dispose();
    }
    else
    {
        username = dataSession?.Account.Username;
    }

    var editMode = 0;

    if (ViewData["Editing"] != null)
    {
        editMode = (int)ViewData["Editing"];
    }
}

@section styles
{
    <link href="~/Content/build/css/selectivity-jquery.min.css" rel="stylesheet" />

    <style>
        .page-editor {
            background-color: #fff;
        }

        #Pembeli_AL {
            resize: vertical;
            height: 100px;
            max-height: 100px;
        }

        .top_nav {
            display: none !important;
        }

        .close-btn {
            display: none;
        }

        .left_col {
            display: none !important;
        }

        .right_col {
            margin-left: 0 !important;
        }

        footer {
            display: none !important;
        }
    </style>
}

<div class="row" id="pembeli-section">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="row pembeli_editor_section" style="margin: 0 auto;">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="page-editor">
                    <h2 class="editor-title">Pembeli</h2>
                    <span class="title-accent"></span>
                    <button type="button" class="pull-right page-close">
                        <span class="close-btn thick"></span>
                    </button>
                    <div class="form-horizontal">
                        <div class="row">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                <div class="x_panel">
                                    <div class="x_title">
                                        <h2 style="font-size: 16px">Detail Pembeli</h2>
                                        <ul class="nav navbar-right panel_toolbox">
                                            <li>
                                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                                            </li>
                                        </ul>
                                        <div class="clearfix"></div>
                                    </div>
                                    <div class="x_content">
                                        @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
                                        {
                                            foreach (var modelError in ViewData.ModelState.SelectMany(x => x.Value.Errors))
                                            {
                                                <div class="alert alert-danger">
                                                    <span class="message-error">@modelError.ErrorMessage</span>
                                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>
                                            }
                                        }
                                        <br>
                                        @using (Html.BeginForm("SavePembeliPopup", "Manage", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            @Html.HiddenFor(m => m.Pembeli.USERNAME, new { Value = username })
                                            @Html.HiddenFor(m => m.Pembeli.TGL_INPUT, new { Value = DateTime.Now.ToString("dd/MM/yyyy") })
                                            @Html.HiddenFor(m => m.Pembeli.RecNum)
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Pembeli.BUYER_CODE, "Kode Pembeli *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @if (Model?.Pembeli?.RecNum != null)
                                                    {
                                                        @Html.HiddenFor(m => m.Pembeli.BUYER_CODE)
                                                        <input type="text" value="@Model.Pembeli.BUYER_CODE" disabled class="form-control" />
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(m => m.Pembeli.BUYER_CODE, new { @class = "form-control", required = "required" })
                                                    }
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Pembeli.NAMA, "Nama Pembeli *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @Html.TextBoxFor(m => m.Pembeli.NAMA, new { @class = "form-control", required = "required" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Pembeli.PERSO, "Nama Akun *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @Html.TextBoxFor(m => m.Pembeli.PERSO, new { @class = "form-control", required = "required" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Pembeli.EMAIL, "Email Akun *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @Html.TextBoxFor(m => m.Pembeli.EMAIL, new { @class = "form-control", type = "email", required = "required" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Pembeli.AL, "Alamat *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @Html.TextAreaFor(m => m.Pembeli.AL, new { @class = "form-control", required = "required" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Pembeli.KODEPROV, "Provinsi *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @Html.HiddenFor(m => m.Pembeli.KODEPROV)
                                                    <div id="KODEPROV" class="selectivity-input" tabindex="0"></div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Pembeli.KODEKABKOT, "Kota *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @Html.HiddenFor(m => m.Pembeli.KODEKABKOT)
                                                    <div id="KODEKABKOT" class="selectivity-input" tabindex="0"></div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Pembeli.KODEPOS, "Kode Pos *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @Html.TextBoxFor(m => m.Pembeli.KODEPOS, new { @class = "form-control", required = "required" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Pembeli.TLP, "Telepon *", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                                <div class="col-md-6 col-sm-6 col-xs-12">
                                                    @Html.TextBoxFor(m => m.Pembeli.TLP, new { @class = "form-control", required = "required" })
                                                </div>
                                            </div>
                                            <input type="button" class="btn btn-primary pull-right" value="Simpan" id="simpan_btn" onclick="simpanPembeli(this)"/>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Hapus pembeli -->
<div class="modal fade" id="konfHapusPembeli" tabindex="-1" role="dialog" aria-labelledby="konfirmasiHapusLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="konfirmasiHapusLabel">Konfirmasi</h4>
            </div>
            <div class="modal-body">
                <div class="row text-center">
                    <h4>Apakah Anda yakin ingin menghapus pembeli ini?</h4>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Tidak</button>
                <button type="button" class="btn btn-success" onclick="deletePembeli()">Ya</button>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script src="~/Content/build/js/selectivity-jquery.min.js" type="text/javascript"></script>

    <script type="text/javascript">
        $pembeliId = "";

        $(document).on('ready',
            function () {
                var table = $('#datatable').DataTable();

                $('#search_pembeli').keyup(function () {
                    table.search($(this).val()).draw();
                });

                $('#tambah_pembeli').on('click', function () {
                    $('.pembeli_table_section').toggle('display');
                    $('.pembeli_editor_section').toggle('display');
                });

                $('button>.close-btn').on('click', function () {
                    $('.pembeli_table_section').toggle('display');
                    $('.pembeli_editor_section').toggle('display');
                });

                if ($('.message-error').text() !== '' || @editMode === 1) {
                    $('#tambah_pembeli').click();
                }

                $('.close-btn').click(function() {
                    location.href = '@Url.Action("Buyer")';
                });

                $('#Pembeli_BUYER_CODE').on('change blur',
                    function () {
                        if (!$(this).is(':disabled')) {
                            cekKode($(this), 'buyer');
                        }
                    });

                $.ajax({
                    type: "GET",
                    /**/
                    url: '@Url.Action("GetProvinsi", "Manage")',
                    /**/
                    contentType: 'application/json',
                    cache: false,
                    success: function (data) {
                        var provList = [];

                        $.each(data,
                            function (i, item) {
                                provList[i] = {
                                    id: item.KodeProv,
                                    text: item.NamaProv
                                };
                            });

                        $('#KODEPROV').selectivity({
                            allowClear: true,
                            items: provList,
                            placeholder: 'Harap pilih'
                        });

                        var $kdProv = $('#Pembeli_KODEPROV').val();

                        $('#KODEPROV').change(function () {
                            var $val = $(this).selectivity('value');

                            if ($val === null) {
                                $("#Pembeli_KODEPROV").val(null);
                                resetKabKot();
                            } else {
                                $("#Pembeli_KODEPROV").val($val);
                                loadDataKabupatenKota($val);
                            }
                        });

                        if ($kdProv !== null) {
                            $('#KODEPROV').selectivity('value', $kdProv);
                        }
                    },
                    error: function (xhr) {
                        console.log(xhr);
                    }
                });

                resetKabKot();
            });

        function resetKabKot() {
            $('#KODEKABKOT').selectivity({
                allowClear: true,
                items: [],
                placeholder: 'Harap pilih'
            });
            $('#KODEKABKOT').selectivity('value', 'Harap pilih');
        }

        function loadDataKabupatenKota(kdProv) {
            var link = '@Url.Action("GetKabKot", "Manage", new { kodeProv = "replaceId" })';
            link = link.replace("replaceId", kdProv);

            $.ajax({
                type: "GET",
                /**/
                url: link,
                /**/
                contentType: 'application/json',
                cache: false,
                success: function (data) {
                    var kabkotList = [];

                    $.each(data,
                        function (i, item) {
                            kabkotList[i] = {
                                id: item.KodeKabKot,
                                text: item.NamaKabKot
                            };
                        });

                    $('#KODEKABKOT').selectivity({
                        allowClear: true,
                        items: kabkotList,
                        placeholder: 'Harap pilih'
                    });

                    $('#KODEKABKOT').change(function () {
                        var $val = $(this).selectivity('value');

                        if ($val === null) {
                            $("#Pembeli_KODEKABKOT").val(null);
                        } else {
                            $("#Pembeli_KODEKABKOT").val($val);
                        }
                    });

                    var $kdKabKot = $('#Pembeli_KODEKABKOT').val();

                    if ($kdKabKot !== null) {
                        $('#KODEKABKOT').selectivity('value', $kdKabKot);
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });
        }

        function simpanPembeli(btnClicked) {
            if (!validateForm()) return false;

            var $form = $(btnClicked).parents('form');

            $.ajax({
                type: "POST",
                url: $form.attr('action'),
                data: $form.serialize(),
                success: function (response) {
                    self.window.close();
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });

            return false;
        }

        function editPembeli(pembeliId) {
            var link = '@Url.Action("EditPembeliPopup", "Manage", new { buyerId = "replaceId" })';
            link = link.replace("replaceId", pembeliId);

            location.href = link;
        }

        function pass(pembeliId) {
            this.$pembeliId = pembeliId;
        }

        function deletePembeli() {
            var link = '@Url.Action("DeletePembeli", "Manage", new { buyerId = "replaceId" })';
            link = link.replace("replaceId", this.$pembeliId);

            location.href = link;
        }

        window.onunload = refreshBuyer;
        function refreshBuyer() {
            window.opener.getBuyer();
        }
    </script>
}